{"version":3,"file":"layout-gap.d.ts","sources":["layout-gap.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnDestroy, NgZone, AfterContentInit } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BaseDirective2, StyleBuilder, StyleDefinition, StyleUtils, MediaMarshaller, ElementMatcher } from '@angular/flex-layout/core';\nimport { Subject } from 'rxjs';\nexport interface LayoutGapParent {\n    directionality: string;\n    items: HTMLElement[];\n    layout: string;\n}\nexport declare class LayoutGapStyleBuilder extends StyleBuilder {\n    private _styler;\n    constructor(_styler: StyleUtils);\n    buildStyles(gapValue: string, parent: LayoutGapParent): StyleDefinition;\n    sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent): void;\n}\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport declare class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n    protected zone: NgZone;\n    protected directionality: Directionality;\n    protected styleUtils: StyleUtils;\n    protected layout: string;\n    protected DIRECTIVE_KEY: string;\n    protected observerSubject: Subject<void>;\n    /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n    protected get childrenNodes(): HTMLElement[];\n    constructor(elRef: ElementRef, zone: NgZone, directionality: Directionality, styleUtils: StyleUtils, styleBuilder: LayoutGapStyleBuilder, marshal: MediaMarshaller);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     */\n    protected onLayoutChange(matcher: ElementMatcher): void;\n    /**\n     *\n     */\n    protected updateWithValue(value: string): void;\n    /** We need to override clearStyles because in most cases mru isn't populated */\n    protected clearStyles(): void;\n    /** Determine if an element will show or hide based on current activation */\n    protected willDisplay(source: HTMLElement): boolean;\n    protected buildChildObservable(): void;\n    protected observer?: MutationObserver;\n}\nexport declare class DefaultLayoutGapDirective extends LayoutGapDirective {\n    protected inputs: string[];\n}\n"]}