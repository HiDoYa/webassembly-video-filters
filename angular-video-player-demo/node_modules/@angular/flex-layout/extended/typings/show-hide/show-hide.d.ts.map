{"version":3,"file":"show-hide.d.ts","sources":["show-hide.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';\nimport { BaseDirective2, LayoutConfigOptions, MediaMarshaller, StyleUtils, StyleBuilder } from '@angular/flex-layout/core';\nexport interface ShowHideParent {\n    display: string;\n    isServer: boolean;\n}\nexport declare class ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show: string, parent: ShowHideParent): {\n        display: string;\n    };\n}\nexport declare class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n    protected layoutConfig: LayoutConfigOptions;\n    protected platformId: Object;\n    protected serverModuleLoaded: boolean;\n    protected DIRECTIVE_KEY: string;\n    /** Original DOM Element CSS display style */\n    protected display: string;\n    protected hasLayout: boolean;\n    protected hasFlexChild: boolean;\n    constructor(elementRef: ElementRef, styleBuilder: ShowHideStyleBuilder, styler: StyleUtils, marshal: MediaMarshaller, layoutConfig: LayoutConfigOptions, platformId: Object, serverModuleLoaded: boolean);\n    ngAfterViewInit(): void;\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    protected trackExtraTriggers(): void;\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    protected getDisplayStyle(): string;\n    /** Validate the visibility value and then update the host's inline display style */\n    protected updateWithValue(value?: boolean | string): void;\n}\n/**\n * 'show' Layout API directive\n */\nexport declare class DefaultShowHideDirective extends ShowHideDirective {\n    protected inputs: string[];\n}\n"]}