{"version":3,"file":"base2.d.ts","sources":["base2.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StyleDefinition, StyleUtils } from '../style-utils/style-utils';\nimport { StyleBuilder } from '../style-builder/style-builder';\nimport { MediaMarshaller } from '../media-marshaller/media-marshaller';\nexport declare abstract class BaseDirective2 implements OnChanges, OnDestroy {\n    protected elementRef: ElementRef;\n    protected styleBuilder: StyleBuilder;\n    protected styler: StyleUtils;\n    protected marshal: MediaMarshaller;\n    protected DIRECTIVE_KEY: string;\n    protected inputs: string[];\n    /** The most recently used styles for the builder */\n    protected mru: StyleDefinition;\n    protected destroySubject: Subject<void>;\n    protected currentValue: any;\n    /** Access to host element's parent DOM node */\n    protected get parentElement(): HTMLElement | null;\n    /** Access to the HTMLElement for the directive */\n    protected get nativeElement(): HTMLElement;\n    /** Access to the activated value for the directive */\n    get activatedValue(): string;\n    set activatedValue(value: string);\n    /** Cache map for style computation */\n    protected styleCache: Map<string, StyleDefinition>;\n    protected constructor(elementRef: ElementRef, styleBuilder: StyleBuilder, styler: StyleUtils, marshal: MediaMarshaller);\n    /** For @Input changes */\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /** Register with central marshaller service */\n    protected init(extraTriggers?: Observable<any>[]): void;\n    /** Add styles to the element using predefined style builder */\n    protected addStyles(input: string, parent?: Object): void;\n    /** Remove generated styles from an element using predefined style builder */\n    protected clearStyles(): void;\n    /** Force trigger style updates on DOM element */\n    protected triggerUpdate(): void;\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    protected getFlexFlowDirection(target: HTMLElement, addIfMissing?: boolean): string;\n    protected hasWrap(target: HTMLElement): boolean;\n    /** Applies styles given via string pair or object map to the directive element */\n    protected applyStyleToElement(style: StyleDefinition, value?: string | number, element?: HTMLElement): void;\n    protected setValue(val: any, bp: string): void;\n    protected updateWithValue(input: string): void;\n}\n"]}