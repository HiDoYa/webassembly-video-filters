{"version":3,"file":"break-point-registry.d.ts","sources":["break-point-registry.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { BreakPoint } from './break-point';\nexport declare type OptionalBreakPoint = BreakPoint | null;\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nexport declare class BreakPointRegistry {\n    readonly items: BreakPoint[];\n    constructor(list: BreakPoint[]);\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     */\n    findByAlias(alias: string): OptionalBreakPoint;\n    findByQuery(query: string): OptionalBreakPoint;\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     */\n    get overlappings(): BreakPoint[];\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     */\n    get aliases(): string[];\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     */\n    get suffixes(): string[];\n    /**\n     * Memoized lookup using custom predicate function\n     */\n    private findWithPredicate;\n    /**\n     * Memoized BreakPoint Lookups\n     */\n    private readonly findByMap;\n}\n"]}