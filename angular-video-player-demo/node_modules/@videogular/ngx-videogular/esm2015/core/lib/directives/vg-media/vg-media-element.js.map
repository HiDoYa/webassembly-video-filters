{"version":3,"file":"vg-media-element.js","sourceRoot":"../../../../../libs/ngx-videogular/core/src/","sources":["lib/directives/vg-media/vg-media-element.ts"],"names":[],"mappings":";;;;;AAGA,MAAM,OAAO,cAAc;;;;IAGzB,IAAI,WAAW;QACb,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;;;IAiDD,YAAY,CAAC,IAAY,EAAE,KAAc,EAAE,QAAiB;QAC1D,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;IAED,WAAW,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;;;;IAED,IAAI,KAAU,CAAC;;;;IAEf,cAAc,KAAU,CAAC;;;;IAEzB,oBAAoB;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;;;IAED,mBAAmB,CACjB,mBAA2B,EAC3B,eAAwB,EACxB,OAAa,IACN,CAAC;;;;;;IAEV,cAAc,CAAC,SAAsB,IAAS,CAAC;;;;;;IAE/C,2BAA2B,CAAC,sBAA4B,IAAS,CAAC;;;;IAElE,KAAK,KAAU,CAAC;;;;IAEhB,IAAI;QACF,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;IAED,YAAY,CAAC,SAA0B;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;;;IAED,gBAAgB,CACd,KAAa,EACb,SAA6C,EAC7C,WAAqB,IACd,CAAC;CACX;;;IA9FC,4BAAW;;IACX,8BAAU;;IAIV,kCAAkB;;IAClB,kCAAqB;;IACrB,kCAAkB;;IAClB,qCAA0B;;IAC1B,oCAAmB;;IACnB,qCAAoB;;IACpB,sCAAsB;;IACtB,6CAA4B;;IAC5B,kCAAiB;;IACjB,+BAAe;;IACf,+BAAkB;;IAClB,8BAAc;;IACd,mCAA2B;;IAC3B,yCAAwB;;IACxB,2CAA0B;;IAC1B,+CAAuC;;IACvC,gCAAoB;;IACpB,0CAA0B;;IAC1B,oDAAmC;;IACnC,yCAAyB;;IACzB,wCAAoB;;IACpB,oCAAoB;;IACpB,+BAAe;;IACf,sCAAqB;;IACrB,qCAA8C;;IAC9C,qCAAgD;;IAChD,gCAAgB;;IAChB,sCAAqB;;IACrB,gCAAmB;;IACnB,iCAAgB;;IAChB,oCAAmB;;IACnB,kCAAqB;;IACrB,iCAAiB;;IACjB,6BAAY;;IACZ,mCAA6B;;IAC7B,oCAA0B;;IAC1B,qCAA4B;;IAC5B,gCAAe;;IACf,2CAA0B;;IAC1B,0CAAyB;;IACzB,0CAAyB;;IACzB,uCAAsB;;IACtB,sCAAqB;;IACrB,uCAAsB;;IACtB,sCAAqB;;IACrB,yCAAwB;;IACxB,2CAA0B","sourcesContent":["import { IMediaElement } from '../../interfaces/i-media-element.interface';\nimport { AudioTrackList, VideoTrackList } from '../../interfaces/deprecated-tracks-types.interface';\n\nexport class VgMediaElement implements IMediaElement {\n  id: string;\n  elem: any;\n  get audioTracks(): AudioTrackList {\n    return null;\n  }\n  autoplay: boolean;\n  buffered: TimeRanges;\n  controls: boolean;\n  crossOrigin: string | any;\n  currentSrc: string;\n  currentTime: number;\n  defaultMuted: boolean;\n  defaultPlaybackRate: number;\n  duration: number;\n  ended: boolean;\n  error: MediaError;\n  loop: boolean;\n  mediaKeys: MediaKeys | any;\n  msAudioCategory: string;\n  msAudioDeviceType: string;\n  msGraphicsTrustStatus: MSGraphicsTrust;\n  msKeys: MSMediaKeys;\n  msPlayToDisabled: boolean;\n  msPlayToPreferredSourceUri: string;\n  msPlayToPrimary: boolean;\n  msPlayToSource: any;\n  msRealTime: boolean;\n  muted: boolean;\n  networkState: number;\n  onencrypted: (ev: MediaEncryptedEvent) => any;\n  onmsneedkey: (ev: MSMediaKeyNeededEvent) => any;\n  paused: boolean;\n  playbackRate: number;\n  played: TimeRanges;\n  preload: string;\n  readyState: number;\n  seekable: TimeRanges;\n  seeking: boolean;\n  src: string;\n  srcObject: MediaStream | any;\n  textTracks: TextTrackList;\n  videoTracks: VideoTrackList;\n  volume: number;\n  HAVE_CURRENT_DATA: number;\n  HAVE_ENOUGH_DATA: number;\n  HAVE_FUTURE_DATA: number;\n  HAVE_METADATA: number;\n  HAVE_NOTHING: number;\n  NETWORK_EMPTY: number;\n  NETWORK_IDLE: number;\n  NETWORK_LOADING: number;\n  NETWORK_NO_SOURCE: number;\n  // @ts-ignore\n  addTextTrack(kind: string, label?: string, language?: string): TextTrack {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type: string): string {\n    return null;\n  }\n\n  load(): void {}\n\n  msClearEffects(): void {}\n\n  msGetAsCastingSource(): any {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(\n    _activatableClassId: string,\n    _effectRequired: boolean,\n    _config?: any\n  ): void {}\n  // @ts-ignore\n  msSetMediaKeys(mediaKeys: MSMediaKeys): void {}\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager?: any): void {}\n\n  pause(): void {}\n\n  play(): Promise<any> {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys: MediaKeys | any): Promise<void> {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(\n    _type: string,\n    _listener: EventListenerOrEventListenerObject,\n    _useCapture?: boolean\n  ): void {}\n}\n"]}