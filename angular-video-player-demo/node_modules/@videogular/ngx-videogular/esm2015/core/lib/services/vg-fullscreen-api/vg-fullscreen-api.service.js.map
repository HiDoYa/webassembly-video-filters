{"version":3,"file":"vg-fullscreen-api.service.js","sourceRoot":"../../../../../libs/ngx-videogular/core/src/","sources":["lib/services/vg-fullscreen-api/vg-fullscreen-api.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter, QueryList } from '@angular/core';\nimport { VgUtilsService } from '../vg-utils/vg-utils.service';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { VgMediaDirective } from '../../directives/vg-media/vg-media.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgFullscreenApiService {\n  polyfill: any;\n  onchange: string;\n  onerror: string;\n  nativeFullscreen = true;\n  isFullscreen = false;\n  isAvailable: boolean;\n  videogularElement: HTMLElement;\n  medias: QueryList<VgMediaDirective>;\n\n  fsChangeSubscription: Subscription;\n  onChangeFullscreen: EventEmitter<any> = new EventEmitter();\n\n  constructor() {}\n\n  init(elem: HTMLElement, medias: QueryList<VgMediaDirective>) {\n    this.videogularElement = elem;\n    this.medias = medias;\n\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror',\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror',\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror',\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror',\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen', // Hack for iOS: webkitfullscreenchange it's not firing\n        onerror: 'webkitfullscreenerror',\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError',\n      },\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtilsService.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = this.polyfill != null;\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher: HTMLElement | Document;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(\n      fsElemDispatcher,\n      this.polyfill.onchange\n    ).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element: any = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n\n  request(elem: any) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtilsService.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (\n          (!this.polyfill.enabled && elem === this.videogularElement) ||\n          VgUtilsService.isiOSDevice()\n        ) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem: any) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n}\n"]}