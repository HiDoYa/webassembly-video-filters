{"version":3,"file":"google.ima.js","sourceRoot":"../../../../../libs/ngx-videogular/ima-ads/src/","sources":["lib/google.ima.ts"],"names":[],"mappings":"","sourcesContent":["// tslint:disable: no-namespace\ndeclare namespace google {\n  export namespace ima {\n    /**\n     * AdDisplayContainer\n     */\n    export class AdDisplayContainer {\n      constructor(containerElement: HTMLElement);\n      initialize(): void;\n      destroy(): void;\n    }\n\n    /**\n     * AdsLoader\n     */\n    export class AdsLoader {\n      constructor(containerElement: AdDisplayContainer);\n      contentComplete(): void;\n      addEventListener(\n        type: string,\n        callback: (evt: AdsManagerLoadedEvent) => void,\n        useCapture?: boolean\n      ): any;\n      requestAds(adsRequest: AdsRequest, opt_userRequestContext?: any): void;\n    }\n\n    /**\n     * AdsManager\n     */\n    export class AdsManager {\n      resize(width: number, height: number, viewMode: ViewMode): void;\n      addEventListener(\n        type: string,\n        callback: (evt: AdsManagerLoadedEvent) => void,\n        useCapture?: boolean\n      ): any;\n      init(\n        width: number,\n        height: number,\n        viewMode: ViewMode,\n        opt_videoElement?: HTMLVideoElement\n      ): void;\n      start(): void;\n      getAdSkippableState(): boolean;\n      skip(): void;\n      destroy(): void;\n      getCuePoints(): Array<number>;\n    }\n\n    /**\n     * AdsManagerLoadedEvent\n     */\n    class AdsManagerLoadedEventTypes {\n      ADS_MANAGER_LOADED;\n    }\n    export class AdsManagerLoadedEvent {\n      static Type: AdsManagerLoadedEventTypes;\n      getAdsManager(\n        contentPlayback: { currentTime: number; duration: number },\n        adsRenderingSettings?: AdsRenderingSettings\n      ): AdsManager;\n    }\n\n    /**\n     * AdsRenderingSettings\n     */\n    class AdsRenderingSettings {}\n\n    /**\n     * AdEvent\n     */\n    class AdEventType {\n      CONTENT_PAUSE_REQUESTED;\n      CONTENT_RESUME_REQUESTED;\n      SKIPPABLE_STATE_CHANGED;\n      ALL_ADS_COMPLETED;\n      COMPLETE;\n    }\n    export class AdEvent {\n      static Type: AdEventType;\n    }\n\n    /**\n     * AdErrorEvent\n     */\n    class AdErrorEventTypes {\n      AD_ERROR;\n    }\n    export class AdErrorEvent {\n      static Type: AdErrorEventTypes;\n    }\n\n    /**\n     * AdsRequest\n     */\n    export class AdsRequest {\n      adTagUrl: string;\n      linearAdSlotWidth: number;\n      linearAdSlotHeight: number;\n      nonLinearAdSlotWidth: number;\n      nonLinearAdSlotHeight: number;\n    }\n\n    /**\n     * ViewMode\n     */\n    export enum ViewMode {\n      NORMAL,\n      FULLSCREEN,\n    }\n  }\n}\n\ndeclare namespace googletag {\n  export namespace cmd {\n    function push(command: Function): void;\n  }\n\n  export class Service {}\n\n  export class CompanionAdsService extends Service {\n    setRefreshUnfilledSlots(value: boolean): void;\n  }\n\n  export class PubAdsService extends Service {\n    enableVideoAds(): void;\n  }\n\n  export class GeneralSize {}\n\n  export class Slot {\n    addService(service: Service): Slot;\n  }\n\n  function defineSlot(\n    adUnitPath: string,\n    size: GeneralSize,\n    opt_div: string\n  ): Slot;\n  function companionAds(): CompanionAdsService;\n  function pubads(): PubAdsService;\n  function enableServices(): void;\n}\n"]}