{"version":3,"file":"vg-dash.directive.js","sourceRoot":"../../../../../libs/ngx-videogular/streaming/src/","sources":["lib/directives/vg-dash/vg-dash.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  IDRMLicenseServer,\n  BitrateOptions,\n  VgApiService,\n} from '@videogular/ngx-videogular/core';\n\ndeclare let dashjs: {\n  MediaPlayer: {\n    (): { (): any; new (): any; create: { (): any; new (): any } };\n    events: { STREAM_INITIALIZED: any };\n  };\n  Debug: { LOG_LEVEL_NONE: any };\n};\n\n@Directive({\n  selector: '[vgDash]',\n  exportAs: 'vgDash',\n})\nexport class VgDashDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() vgDash: string;\n  @Input() vgDRMToken: string;\n  @Input() vgDRMLicenseServer: IDRMLicenseServer;\n\n  @Output() onGetBitrates: EventEmitter<BitrateOptions[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  dash: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgApiService) {}\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    changes.vgDash?.currentValue ? this.createPlayer() : this.destroyPlayer();\n  }\n\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    }\n\n    // It's a DASH source\n    if (\n      this.vgDash &&\n      (this.vgDash.indexOf('.mpd') > -1 ||\n        this.vgDash.indexOf('mpd-time-csf') > -1)\n    ) {\n      let drmOptions: any;\n\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = {\n                Authorization: this.vgDRMToken,\n              };\n            }\n          }\n        }\n      }\n\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.updateSettings({debug: {logLevel: dashjs.Debug.LOG_LEVEL_NONE}});\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n\n        if (audioList.length > 1) {\n          audioList.forEach(\n            (item: { qualityIndex: number }) =>\n              (item.qualityIndex = ++item.qualityIndex)\n          );\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO',\n          });\n\n          this.onGetBitrates.emit(audioList);\n        }\n\n        if (videoList.length > 1) {\n          videoList.forEach(\n            (item: {qualityIndex: number}) => (\n              item.qualityIndex = ++item.qualityIndex\n            )\n          );\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO',\n          });\n\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n\n  setBitrate({mediaType, qualityIndex}: BitrateOptions) {\n    if (this.dash) {\n      if (qualityIndex > 0) {\n        if (this.dash.getSettings()) {\n          this.dash.updateSettings({\n            streaming: {\n              abr: {\n                autoSwitchBitrate: {\n                  [mediaType]: false\n                }\n              }\n            }\n          });\n        }\n\n        const nextIndex = qualityIndex - 1;\n        this.dash.setQualityFor(mediaType, nextIndex);\n      } else {\n        this.dash.updateSettings({\n          streaming: {\n            abr: {\n              autoSwitchBitrate: {\n                [mediaType]: true\n              }\n            }\n          }\n        });\n      }\n    }\n  }\n\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.destroyPlayer();\n  }\n}\n"]}