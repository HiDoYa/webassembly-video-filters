{"version":3,"file":"vg-hls.directive.js","sourceRoot":"../../../../../libs/ngx-videogular/streaming/src/","sources":["lib/directives/vg-hls/vg-hls.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  IHLSConfig,\n  BitrateOptions,\n  VgApiService,\n} from '@videogular/ngx-videogular/core';\n\ndeclare let Hls: {\n  new (arg0: IHLSConfig): any;\n  isSupported: () => any;\n  Events: { MANIFEST_PARSED: any; LEVEL_LOADED: any };\n};\n\n@Directive({\n  selector: '[vgHls]',\n  exportAs: 'vgHls',\n})\nexport class VgHlsDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() vgHls: string;\n  @Input() vgHlsHeaders: { [key: string]: string } = {};\n\n  @Output() onGetBitrates: EventEmitter<BitrateOptions[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  hls: any;\n  preload: boolean;\n  crossorigin: string;\n  config: IHLSConfig;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgApiService) {}\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n\n    this.config = {\n      autoStartLoad: this.preload,\n    } as IHLSConfig;\n    // @ts-ignore\n    this.config.xhrSetup = (xhr: {\n      withCredentials: boolean;\n      setRequestHeader: (arg0: string, arg1: string) => void;\n    }) => {\n      // Send cookies\n      if (this.crossorigin === 'use-credentials') {\n        xhr.withCredentials = true;\n      }\n      for (const key of Object.keys(this.vgHlsHeaders)) {\n        xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n      }\n    };\n\n    this.createPlayer();\n\n    if (!this.preload) {\n      this.subscriptions.push(\n        this.API.subscriptions.play.subscribe(() => {\n          if (this.hls) {\n            this.hls.startLoad(0);\n          }\n        })\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.vgHls?.currentValue) {\n      this.createPlayer();\n    } else if (changes.vgHlsHeaders && changes.vgHlsHeaders.currentValue) {\n      // Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    }\n\n    // It's a HLS source\n    if (\n      this.vgHls &&\n      this.vgHls.indexOf('m3u8') > -1 &&\n      Hls.isSupported() &&\n      this.API.isPlayerReady\n    ) {\n      const video: HTMLVideoElement = this.ref.nativeElement;\n\n      this.hls = new Hls(this.config);\n      // @ts-ignore\n      this.hls.on(\n        Hls.Events.MANIFEST_PARSED,\n        (_event: any, data: { levels: any[] }) => {\n          const videoList = [];\n\n          videoList.push({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO',\n          });\n\n          data.levels.forEach(\n            (\n              item: { width: any; height: any; bitrate: any; name: any },\n              index: number\n            ) => {\n              videoList.push({\n                qualityIndex: ++index,\n                width: item.width,\n                height: item.height,\n                bitrate: item.bitrate,\n                mediaType: 'video',\n                label: item.name,\n              });\n            }\n          );\n\n          this.onGetBitrates.emit(videoList);\n        }\n      );\n      // @ts-ignore\n      this.hls.on(\n        Hls.Events.LEVEL_LOADED,\n        (_event: any, data: { details: { live: any } }) => {\n          this.target.isLive = data.details.live;\n        }\n      );\n\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOptions) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n}\n"]}