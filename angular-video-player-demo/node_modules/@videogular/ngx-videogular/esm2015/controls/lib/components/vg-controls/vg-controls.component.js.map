{"version":3,"file":"vg-controls.component.js","sourceRoot":"../../../../../libs/ngx-videogular/controls/src/","sources":["lib/components/vg-controls/vg-controls.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { fromEvent } from 'rxjs';\nimport { VgApiService, VgControlsHiddenService, VgStates } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-controls',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [\n    `\n      vg-controls {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: 50px;\n        z-index: 300;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.5);\n        -webkit-transition: bottom 1s;\n        -khtml-transition: bottom 1s;\n        -moz-transition: bottom 1s;\n        -ms-transition: bottom 1s;\n        transition: bottom 1s;\n      }\n      vg-controls.hide {\n        bottom: -50px;\n      }\n    `,\n  ],\n})\nexport class VgControlsComponent implements OnInit, AfterViewInit, OnDestroy {\n  elem: HTMLElement;\n  target: any;\n\n  @HostBinding('style.pointer-events') isAdsPlaying = 'initial';\n  @HostBinding('class.hide') hideControls = false;\n\n  @Input() vgFor: string;\n  @Input() vgAutohide = false;\n  @Input() vgAutohideTime = 3;\n\n  private timer: any;\n\n  mouseMove$: Observable<any>;\n  touchStart$: Observable<any>;\n\n  subscriptions: Subscription[] = [];\n  // @ts-ignore\n  constructor(\n    private API: VgApiService,\n    ref: ElementRef,\n    private hidden: VgControlsHiddenService\n  ) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n    this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n\n    this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n    this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(\n      this.target.subscriptions.play.subscribe(this.onPlay.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.pause.subscribe(this.onPause.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this))\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.vgAutohide) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  onPlay() {\n    if (this.vgAutohide) {\n      this.hide();\n    }\n  }\n\n  onPause() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n  }\n\n  onStartAds() {\n    this.isAdsPlaying = 'none';\n  }\n\n  onEndAds() {\n    this.isAdsPlaying = 'initial';\n  }\n\n  hide() {\n    if (this.vgAutohide) {\n      clearTimeout(this.timer);\n      this.hideAsync();\n    }\n  }\n\n  show() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n\n    if (this.vgAutohide) {\n      this.hideAsync();\n    }\n  }\n\n  private hideAsync() {\n    if (this.API.state === VgStates.VG_PLAYING) {\n      this.timer = setTimeout(() => {\n        this.hideControls = true;\n        this.hidden.state(true);\n      }, this.vgAutohideTime * 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n"]}