{"version":3,"file":"vg-track-selector.component.js","sourceRoot":"../../../../../libs/ngx-videogular/controls/src/","sources":["lib/components/vg-track-selector/vg-track-selector.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\nexport interface Option {\n  id: string;\n  label: string;\n  selected: boolean;\n}\n\n@Component({\n  selector: 'vg-track-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"container\">\n      <div\n        class=\"track-selected\"\n        [class.vg-icon-closed_caption]=\"!trackSelected\"\n      >\n        {{ trackSelected || '' }}\n      </div>\n      <select\n        class=\"trackSelector\"\n        (change)=\"selectTrack($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"track selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let track of tracks\"\n          [value]=\"track.id\"\n          [selected]=\"track.selected === true\"\n        >\n          {{ track.label }}\n        </option>\n      </select>\n    </div>\n  `,\n  styles: [\n    `\n      vg-track-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-track-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-track-selector select.trackSelector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-track-selector select.trackSelector::-ms-expand {\n        display: none;\n      }\n      vg-track-selector select.trackSelector option {\n        color: #000;\n      }\n      vg-track-selector .track-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-track-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport class VgTrackSelectorComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  tracks: Array<Option>;\n  trackSelected: string;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const subs: Array<Option> = Array.from(\n      (this.API.getMasterMedia().elem as HTMLMediaElement).children\n    )\n      .filter((item: HTMLElement) => item.tagName === 'TRACK')\n      .filter((item: HTMLTrackElement) => item.kind === 'subtitles')\n      .map((item: HTMLTrackElement) => ({\n        label: item.label,\n        selected: item.default === true,\n        id: item.srclang,\n      }));\n\n    this.tracks = [\n      ...subs,\n      {\n        id: null,\n        label: 'Off',\n        selected: subs.every((item: Option) => item.selected === false),\n      },\n    ];\n\n    const track: Option = this.tracks.filter(\n      (item: Option) => item.selected === true\n    )[0];\n    this.trackSelected = track.id;\n    this.ariaValue = track.label;\n  }\n\n  selectTrack(trackId: string) {\n    this.trackSelected = trackId === 'null' ? null : trackId;\n\n    this.ariaValue = 'No track selected';\n\n    Array.from(\n      (this.API.getMasterMedia().elem as HTMLMediaElement).textTracks\n    ).forEach((item: TextTrack) => {\n      if (item.language === trackId) {\n        this.ariaValue = item.label;\n        item.mode = 'showing';\n      } else {\n        item.mode = 'hidden';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n"]}