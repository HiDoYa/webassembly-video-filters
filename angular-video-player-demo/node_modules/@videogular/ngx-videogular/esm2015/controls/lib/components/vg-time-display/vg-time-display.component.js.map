{"version":3,"file":"vg-time-display.component.js","sourceRoot":"../../../../../libs/ngx-videogular/controls/src/","sources":["lib/components/vg-time-display/vg-time-display.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n// Workaround until we can use UTC with Angular Date Pipe\n@Pipe({ name: 'vgUtc' })\nexport class VgUtcPipe implements PipeTransform {\n  transform(value: number, format: string): string {\n    let date = new Date(value);\n    let result = format;\n    let ss: string | number = date.getUTCSeconds();\n    let mm: string | number = date.getUTCMinutes();\n    let hh: string | number = date.getUTCHours();\n\n    if (ss < 10) {\n      ss = '0' + ss;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n    if (hh < 10) {\n      hh = '0' + hh;\n    }\n\n    result = result.replace(/ss/g, <string>ss);\n    result = result.replace(/mm/g, <string>mm);\n    result = result.replace(/hh/g, <string>hh);\n\n    return result;\n  }\n}\n\n@Component({\n  selector: 'vg-time-display',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span *ngIf=\"target?.isLive\">LIVE</span>\n    <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc: vgFormat }}</span>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      vg-time-display {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 60px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n        pointer-events: none;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n      }\n    `,\n  ],\n})\nexport class VgTimeDisplayComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgProperty = 'current';\n  @Input() vgFormat = 'mm:ss';\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getTime() {\n    let t = 0;\n\n    if (this.target) {\n      t = Math.round(this.target.time[this.vgProperty]);\n      t = isNaN(t) || this.target.isLive ? 0 : t;\n    }\n\n    return t;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n"]}