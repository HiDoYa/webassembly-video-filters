{"version":3,"file":"vg-quality-selector.component.js","sourceRoot":"../../../../../libs/ngx-videogular/controls/src/","sources":["lib/components/vg-quality-selector/vg-quality-selector.component.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EACL,SAAS,EACT,UAAU,EAEV,KAAK,EACL,iBAAiB,EAIjB,MAAM,EACN,YAAY,GACb,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,YAAY,EAAkB,MAAM,iCAAiC,CAAC;AAqF/E,MAAM,OAAO,0BAA0B;;;;;IAerC,YAAY,GAAe,EAAS,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAX3C,oBAAe,GAAiC,IAAI,YAAY,EAAE,CAAC;QAO7E,kBAAa,GAAmB,EAAE,CAAC;QAKjC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC;IAChC,CAAC;;;;IAED,QAAQ,KAAI,CAAC;;;;;IAEb,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE;YACzE,IAAI,CAAC,QAAQ,CAAC,OAAO;;;;YACnB,CAAC,IAAI,EAAE,EAAE,CACP,CAAC,IAAI,CAAC,KAAK;gBACT,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,EAC9D,CAAC;SACH;IACH,CAAC;;;;;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAClD,CAAC;;;;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO;;;;QAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,EAAC,CAAC;IACrD,CAAC;;;YAzHF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;GAqBT;yBAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsDC;aAEJ;;;;YA/FC,UAAU;YAWH,YAAY;;;uBAuFlB,KAAK;8BAEL,MAAM;;;;IAFP,8CAAoC;;IAEpC,qDAA6E;;IAE7E,qDAAgC;;IAEhC,0CAAkB;;IAClB,4CAAY;;IAEZ,mDAAmC;;IAEnC,+CAAkB;;IAEW,yCAAwB","sourcesContent":["import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService, BitrateOptions } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-quality-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"container\">\n      <div class=\"quality-selected\" [class.vg-icon-hd]=\"!bitrateSelected\">\n        {{ bitrateSelected?.label }}\n      </div>\n      <select\n        class=\"quality-selector\"\n        (change)=\"selectBitrate($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"quality selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let bitrate of bitrates\"\n          [value]=\"bitrate.qualityIndex\"\n          [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\"\n        >\n          {{ bitrate.label }}\n        </option>\n      </select>\n    </div>\n  `,\n  styles: [\n    `\n      vg-quality-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-quality-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-quality-selector select.quality-selector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-quality-selector select.quality-selector::-ms-expand {\n        display: none;\n      }\n      vg-quality-selector select.quality-selector option {\n        color: #000;\n      }\n      vg-quality-selector .quality-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-quality-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport class VgQualitySelectorComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @Input() bitrates: BitrateOptions[];\n\n  @Output() onBitrateChange: EventEmitter<BitrateOptions> = new EventEmitter();\n\n  bitrateSelected: BitrateOptions;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.bitrates.currentValue && changes.bitrates.currentValue.length) {\n      this.bitrates.forEach(\n        (item) =>\n          (item.label =\n            item.label || Math.round(item.bitrate / 1000).toString())\n      );\n    }\n  }\n\n  selectBitrate(index: number) {\n    this.bitrateSelected = this.bitrates[index];\n    this.onBitrateChange.emit(this.bitrates[index]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n"]}