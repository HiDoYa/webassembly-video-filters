{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../libs/ngx-videogular/core/src/lib/services/states/vg-states.service.ts","../libs/ngx-videogular/core/src/lib/services/vg-api/vg-api.service.ts","../libs/ngx-videogular/core/src/lib/services/vg-controls-hidden/vg-controls-hidden.service.ts","../libs/ngx-videogular/core/src/lib/services/vg-utils/vg-utils.service.ts","../libs/ngx-videogular/core/src/lib/services/vg-fullscreen-api/vg-fullscreen-api.service.ts","../libs/ngx-videogular/core/src/lib/services/events/vg-events.service.ts","../libs/ngx-videogular/core/src/lib/directives/vg-cue-points/vg-cue-points.directive.ts","../libs/ngx-videogular/core/src/lib/directives/vg-media/vg-media.directive.ts","../libs/ngx-videogular/core/src/lib/components/vg-player/vg-player.component.ts","../core/src/lib/core.module.ts","../libs/ngx-videogular/core/src/lib/directives/vg-media/vg-media-element.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","Injectable","args","providedIn","VgApiService","this","medias","playerReadyEvent","EventEmitter","isPlayerReady","prototype","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","defineProperty","$$getAllProperties","seconds","$$setAllProperties","state","volume","rate","seekTime","byPercent","$$seek","second","duration","currentTime","addTextTrack","type","label","language","$$addTextTrack","property","keys","current","total","left","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgControlsHiddenService","isHiddenSubject","Subject","isHidden","asObservable","hidden","VgUtilsService","getZIndex","elementZIndex","zIndex","tags","document","getElementsByTagName","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isCordova","URL","VgFullscreenApiService","nativeFullscreen","isFullscreen","onChangeFullscreen","init","_this","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","fromEvent","subscribe","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgCuePointsDirective","ref","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","subscriptions","cuesSubscriptions","totalCues","ngOnInit","onLoad$","nativeElement","onLoad","bind","event","cues","target","track","updateCuePoints","forEach","s","unsubscribe","onEnter$","onEnter","onExit$","onExit","ngDoCheck","ngOnDestroy","Directive","selector","ElementRef","Output","VgMediaDirective","api","time","buffer","end","canPlay","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isLive","isBufferDetected","checkInterval","currentPlayPos","lastPlayPos","playAtferSync","bufferDetected","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","loadedData","loadedMetadata","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","startAds","endAds","mutation","Observable","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","onPlay","pauseObs","onPause","timeUpdateObs","onTimeUpdate","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","combineLatest","pipe","map","params","_i","checkReadyState","readyState","allReady","some","syncSubscription","startSync","timer","diff","mut","attributeName","src","loadMedia","removedNodes","toLowerCase","stopBufferCheck","setTimeout","load","playPromise","then","catch","Infinity","specifiedDuration","playbackRate","buffered","textTracks","detectChanges","t","Math","round","closed","startBufferCheck","bufferCheck","offset","checkBufferSubscription","mode","newTrack","complete","ChangeDetectorRef","Input","VgPlayerComponent","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","fsState","toString","Component","encapsulation","ViewEncapsulation","None","template","providers","HostBinding","ContentChildren","services","directives","NgModule","imports","CommonModule","declarations","exports","VgMediaElement","kind","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","_activatableClassId","_effectRequired","_config","msSetMediaKeys","mediaKeys","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","addEventListener","_type","_listener","_useCapture"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgStates {\n  static VG_ENDED = 'ended';\n  static VG_PAUSED = 'paused';\n  static VG_PLAYING = 'playing';\n  static VG_LOADING = 'waiting';\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { VgFullscreenApiService } from '../vg-fullscreen-api/vg-fullscreen-api.service';\nimport { VgStates } from '../states/vg-states.service';\nimport { IPlayable } from '../../interfaces/vg-media-api.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgApiService {\n  medias = {}; // TODO: refactor to Set<IPlayable>\n  videogularElement: any;\n  playerReadyEvent: EventEmitter<VgApiService> = new EventEmitter<VgApiService>(true);\n  isPlayerReady = false;\n  fsAPI: VgFullscreenApiService;\n\n  constructor() {}\n\n  onPlayerReady(fsAPI: VgFullscreenApiService) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n\n  getDefaultMedia(): IPlayable {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n\n  getMasterMedia(): IPlayable {\n    let master: any;\n    for (const id in this.medias) {\n      if (\n        this.medias[id].vgMaster === 'true' ||\n        this.medias[id].vgMaster === true\n      ) {\n        master = this.medias[id];\n        break;\n      }\n    }\n    return master || this.getDefaultMedia();\n  }\n\n  isMasterDefined(): boolean {\n    let result = false;\n    for (const id in this.medias) {\n      if (\n        this.medias[id].vgMaster === 'true' ||\n        this.medias[id].vgMaster === true\n      ) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  }\n\n  getMediaById(id: string = null): IPlayable {\n    let media = this.medias[id];\n\n    if (!id || id === '*') {\n      media = this;\n    }\n\n    return media;\n  }\n\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n\n  $$seek(media: IPlayable, value: number, byPercent: boolean = false) {\n    let second: number;\n    let duration: number = media.duration;\n\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n\n      second = (value * duration) / 100;\n    } else {\n      second = value;\n    }\n\n    media.currentTime = second;\n  }\n\n  addTextTrack(type: string, label?: string, language?: string) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n  $$addTextTrack(\n    media: IPlayable,\n    type: string,\n    label?: string,\n    language?: string\n  ) {\n    media.addTextTrack(type, label, language);\n  }\n\n  $$getAllProperties(property: string) {\n    const medias = {};\n    let result: any;\n\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n\n    const nMedias = Object.keys(medias).length;\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n\n          case 'time':\n            result = { current: 0, total: 0, left: 0 };\n            break;\n        }\n        break;\n\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n\n    return result;\n  }\n\n  $$setAllProperties(property: string, value: any) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n\n  registerElement(elem: HTMLElement) {\n    this.videogularElement = elem;\n  }\n\n  registerMedia(media: IPlayable) {\n    this.medias[media.id] = media;\n  }\n\n  unregisterMedia(media: IPlayable) {\n    delete this.medias[media.id];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgControlsHiddenService {\n  isHidden: Observable<boolean>;\n\n  private isHiddenSubject: Subject<boolean> = new Subject<boolean>();\n\n  constructor() {\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n\n  state(hidden: boolean) {\n    this.isHiddenSubject.next(hidden);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgUtilsService {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   */\n  static getZIndex(): number {\n    let zIndex = 1;\n    let elementZIndex: number;\n\n    const tags = document.getElementsByTagName('*');\n\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n\n    return zIndex;\n  }\n\n  // Very simple mobile detection, not 100% reliable\n  static isMobileDevice() {\n    // return (\n    //   typeof window.screen.orientation !== 'undefined' ||\n    //   navigator.userAgent.indexOf('IEMobile') !== -1\n    // );\n\n    // window.orientation is deprecated and we should use window.screen.orientation\n    return (\n      typeof window.orientation !== 'undefined' ||\n      navigator.userAgent.indexOf('IEMobile') !== -1\n    );\n  }\n\n  static isiOSDevice() {\n    return (\n      navigator.userAgent.match(/ip(hone|ad|od)/i) &&\n      !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i)\n    );\n  }\n\n  static isCordova() {\n    return (\n      document.URL.indexOf('http://') === -1 &&\n      document.URL.indexOf('https://') === -1\n    );\n  }\n}\n","import { Injectable, EventEmitter, QueryList } from '@angular/core';\nimport { VgUtilsService } from '../vg-utils/vg-utils.service';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { VgMediaDirective } from '../../directives/vg-media/vg-media.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgFullscreenApiService {\n  polyfill: any;\n  onchange: string;\n  onerror: string;\n  nativeFullscreen = true;\n  isFullscreen = false;\n  isAvailable: boolean;\n  videogularElement: HTMLElement;\n  medias: QueryList<VgMediaDirective>;\n\n  fsChangeSubscription: Subscription;\n  onChangeFullscreen: EventEmitter<any> = new EventEmitter();\n\n  constructor() {}\n\n  init(elem: HTMLElement, medias: QueryList<VgMediaDirective>) {\n    this.videogularElement = elem;\n    this.medias = medias;\n\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror',\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror',\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror',\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror',\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen', // Hack for iOS: webkitfullscreenchange it's not firing\n        onerror: 'webkitfullscreenerror',\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError',\n      },\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtilsService.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = this.polyfill != null;\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher: HTMLElement | Document;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(\n      fsElemDispatcher,\n      this.polyfill.onchange\n    ).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element: any = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n\n  request(elem: any) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtilsService.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (\n          (!this.polyfill.enabled && elem === this.videogularElement) ||\n          VgUtilsService.isiOSDevice()\n        ) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem: any) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VgEvents {\n  static VG_ABORT = 'abort';\n  static VG_CAN_PLAY = 'canplay';\n  static VG_CAN_PLAY_THROUGH = 'canplaythrough';\n  static VG_DURATION_CHANGE = 'durationchange';\n  static VG_EMPTIED = 'emptied';\n  static VG_ENCRYPTED = 'encrypted';\n  static VG_ENDED = 'ended';\n  static VG_ERROR = 'error';\n  static VG_LOADED_DATA = 'loadeddata';\n  static VG_LOADED_METADATA = 'loadedmetadata';\n  static VG_LOAD_START = 'loadstart';\n  static VG_PAUSE = 'pause';\n  static VG_PLAY = 'play';\n  static VG_PLAYING = 'playing';\n  static VG_PROGRESS = 'progress';\n  static VG_RATE_CHANGE = 'ratechange';\n  static VG_SEEK = 'seek';\n  static VG_SEEKED = 'seeked';\n  static VG_SEEKING = 'seeking';\n  static VG_STALLED = 'stalled';\n  static VG_SUSPEND = 'suspend';\n  static VG_TIME_UPDATE = 'timeupdate';\n  static VG_VOLUME_CHANGE = 'volumechange';\n  static VG_WAITING = 'waiting';\n\n  static VG_LOAD = 'load';\n  static VG_ENTER = 'enter';\n  static VG_EXIT = 'exit';\n\n  static VG_START_ADS = 'startads';\n  static VG_END_ADS = 'endads';\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  Output,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\nimport { VgEvents } from '../../services/events/vg-events.service';\n\n@Directive({\n  selector: '[vgCuePoints]',\n})\nexport class VgCuePointsDirective implements OnInit, OnDestroy, DoCheck {\n  @Output() onEnterCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onUpdateCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onExitCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onCompleteCuePoint: EventEmitter<any> = new EventEmitter();\n\n  subscriptions: Subscription[] = [];\n  cuesSubscriptions: Subscription[] = [];\n\n  onLoad$: Observable<any>;\n  onEnter$: Observable<any>;\n  onExit$: Observable<any>;\n\n  totalCues = 0;\n\n  constructor(public ref: ElementRef) {}\n\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n\n  onLoad(event: any) {\n    const cues: TextTrackCue[] = event.target.track.cues;\n\n    this.ref.nativeElement.cues = cues;\n\n    this.updateCuePoints(cues);\n  }\n\n  updateCuePoints(cues: TextTrackCue[]) {\n    this.cuesSubscriptions.forEach((s) => s.unsubscribe());\n\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(\n        this.onEnter$.subscribe(this.onEnter.bind(this))\n      );\n\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(\n        this.onExit$.subscribe(this.onExit.bind(this))\n      );\n    }\n  }\n\n  onEnter(event: any) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n\n  onExit(event: any) {\n    this.onExitCuePoint.emit(event.target);\n  }\n\n  ngDoCheck() {\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes =\n        this.totalCues !== this.ref.nativeElement.track.cues.length;\n\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  Input,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  Observable,\n  Subscription,\n  Subject,\n  fromEvent,\n  timer,\n  combineLatest,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  IPlayable,\n  IMediaSubscriptions,\n} from '../../interfaces/vg-media-api.interface';\nimport { IMediaElement } from '../../interfaces/i-media-element.interface';\nimport { VgApiService } from '../../services/vg-api/vg-api.service';\nimport { VgStates } from '../../services/states/vg-states.service';\nimport { VgEvents } from '../../services/events/vg-events.service';\n\n@Directive({\n  selector: '[vgMedia]',\n})\nexport class VgMediaDirective implements OnInit, OnDestroy, IPlayable {\n  elem: any;\n\n  @Input() vgMedia: IMediaElement;\n  @Input() vgMaster: boolean;\n\n  state: string = VgStates.VG_PAUSED;\n\n  time: any = { current: 0, total: 0, left: 0 };\n  buffer: any = { end: 0 };\n  track: any;\n  subscriptions: IMediaSubscriptions | any;\n\n  canPlay = false;\n  canPlayThrough = false;\n  isMetadataLoaded = false;\n  isWaiting = false;\n  isCompleted = false;\n  isLive = false;\n\n  isBufferDetected = false;\n\n  checkInterval = 200;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n  specifiedDuration: number;\n\n  checkBufferSubscription: any;\n  syncSubscription: Subscription;\n  canPlayAllSubscription: any;\n  playAtferSync = false;\n\n  mutationObs: Subscription;\n  canPlayObs: Subscription;\n  canPlayThroughObs: Subscription;\n  loadedMetadataObs: Subscription;\n  waitingObs: Subscription;\n  progressObs: Subscription;\n  endedObs: Subscription;\n  playingObs: Subscription;\n  playObs: Subscription;\n  pauseObs: Subscription;\n  timeUpdateObs: Subscription;\n  volumeChangeObs: Subscription;\n  errorObs: Subscription;\n\n  bufferDetected: Subject<boolean> = new Subject();\n\n  playPromise: Promise<any>;\n\n  constructor(private api: VgApiService, private ref: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    }\n\n    // Just in case we're creating this vgMedia dynamically register again into API\n    this.api.registerMedia(this);\n\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem as any, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem as any, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem as any, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem as any, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem as any, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem as any, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem as any, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem as any, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem as any, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem as any, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem as any, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem as any, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem as any, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem as any, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem as any, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem as any, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem as any, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem as any, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem as any, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem as any, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem as any, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem as any, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem as any, VgEvents.VG_WAITING),\n\n      // Advertisement only events\n      startAds: fromEvent(window as any, VgEvents.VG_START_ADS),\n      endAds: fromEvent(window as any, VgEvents.VG_END_ADS),\n\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable((observer: any) => {\n        const domObs = new MutationObserver((mutations) => {\n          observer.next(mutations);\n        });\n\n        domObs.observe(this.elem as any, { childList: true, attributes: true });\n\n        return () => {\n          domObs.disconnect();\n        };\n      }),\n\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected,\n    };\n\n    this.mutationObs = this.subscriptions.mutation.subscribe(\n      this.onMutation.bind(this)\n    );\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(\n      this.onCanPlay.bind(this)\n    );\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(\n      this.onCanPlayThrough.bind(this)\n    );\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(\n      this.onLoadMetadata.bind(this)\n    );\n    this.waitingObs = this.subscriptions.waiting.subscribe(\n      this.onWait.bind(this)\n    );\n    this.progressObs = this.subscriptions.progress.subscribe(\n      this.onProgress.bind(this)\n    );\n    this.endedObs = this.subscriptions.ended.subscribe(\n      this.onComplete.bind(this)\n    );\n    this.playingObs = this.subscriptions.playing.subscribe(\n      this.onStartPlaying.bind(this)\n    );\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(\n      this.onTimeUpdate.bind(this)\n    );\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(\n      this.onVolumeChange.bind(this)\n    );\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(() => {\n        this.prepareSync();\n      });\n    }\n  }\n\n  prepareSync() {\n    const canPlayAll: Observable<any>[] = [];\n\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n\n    this.canPlayAllSubscription = combineLatest(canPlayAll)\n      .pipe(map((...params) => {\n        const checkReadyState = (event) => {\n          if (!event?.target) {\n            return false;\n          }\n\n          return event.target.readyState === 4;\n        };\n\n        const allReady: boolean = params.some(checkReadyState);\n\n        if (allReady && !this.syncSubscription) {\n          this.startSync();\n          this.syncSubscription.unsubscribe();\n        }\n      }))\n      .subscribe();\n  }\n\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(() => {\n      for (const media in this.api.medias) {\n        if (this.api.medias[media] !== this) {\n          const diff: number =\n            this.api.medias[media].currentTime - this.currentTime;\n\n          if (diff < -0.3 || diff > 0.3) {\n            this.playAtferSync = this.state === VgStates.VG_PLAYING;\n\n            this.pause();\n            this.api.medias[media].pause();\n            this.api.medias[media].currentTime = this.currentTime;\n          } else {\n            if (this.playAtferSync) {\n              this.play();\n              this.api.medias[media].play();\n              this.playAtferSync = false;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onMutation(mutations: Array<MutationRecord>) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut: MutationRecord = mutations[i];\n\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        if (\n          (mut.target as any).src &&\n          (mut.target as any).src.length > 0 &&\n          (mut.target as any).src.indexOf('blob:') < 0\n        ) {\n          this.loadMedia();\n          break;\n        }\n      } else if (\n        mut.type === 'childList' &&\n        mut.removedNodes.length &&\n        mut.removedNodes[0].nodeName.toLowerCase() === 'source'\n      ) {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0;\n\n    // Start buffering until we can play the media file\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected);\n\n    // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n\n  play() {\n    // short-circuit if already playing\n    if (\n      this.playPromise ||\n      (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)\n    ) {\n      return;\n    }\n\n    this.playPromise = this.vgMedia.play();\n\n    // browser has async play promise\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise\n        .then(() => {\n          this.playPromise = null;\n        })\n        .catch(() => {\n          this.playPromise = null;\n          // deliberately empty for the sake of eating console noise\n        });\n    }\n\n    return this.playPromise;\n  }\n\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise.then(() => {\n        this.vgMedia.pause();\n      });\n    } else {\n      this.vgMedia.pause();\n    }\n  }\n\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    let result: any;\n\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n\n    return result;\n  }\n\n  get duration() {\n    return this.vgMedia.duration === Infinity\n      ? this.specifiedDuration\n      : this.vgMedia.duration;\n  }\n\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds;\n    // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n\n  get volume() {\n    return this.vgMedia.volume;\n  }\n\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  }\n  // @ts-ignore\n  onCanPlay(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onCanPlayThrough(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onLoadMetadata(event: any) {\n    this.isMetadataLoaded = true;\n\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000,\n    };\n\n    this.state = VgStates.VG_PAUSED;\n\n    // Live streaming check\n    const t: number = Math.round(this.time.total);\n    this.isLive = t === Infinity;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onWait(event: any) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onComplete(event: any) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onStartPlaying(event: any) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPlay(event: any) {\n    this.state = VgStates.VG_PLAYING;\n\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPause(event: any) {\n    this.state = VgStates.VG_PAUSED;\n\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onTimeUpdate(event: any) {\n    const end = this.buffered.length - 1;\n\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000,\n    };\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onProgress(event: any) {\n    const end = this.buffered.length - 1;\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onVolumeChange(event: any) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onError(event: any) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  }\n\n  // http://stackoverflow.com/a/23828241/779529\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n\n    if (\n      !this.isBufferDetected &&\n      this.currentPlayPos < this.lastPlayPos + offset\n    ) {\n      this.isBufferDetected = true;\n    }\n\n    if (\n      this.isBufferDetected &&\n      this.currentPlayPos > this.lastPlayPos + offset\n    ) {\n      this.isBufferDetected = false;\n    }\n\n    // Prevent calls to bufferCheck after ngOnDestroy have been called\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n\n    this.lastPlayPos = this.currentPlayPos;\n  }\n\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(\n      () => {\n        this.bufferCheck();\n      }\n    );\n  }\n\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    this.isBufferDetected = false;\n\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    let second: number;\n    const duration: number = this.duration;\n\n    if (byPercent) {\n      second = (value * duration) / 100;\n    } else {\n      second = value;\n    }\n\n    this.currentTime = second;\n  }\n\n  addTextTrack(\n    type: string,\n    label?: string,\n    language?: string,\n    mode?: 'disabled' | 'hidden' | 'showing'\n  ): TextTrack {\n    const newTrack: TextTrack = this.vgMedia.addTextTrack(\n      type,\n      label,\n      language\n    );\n\n    if (mode) {\n      newTrack.mode = mode;\n    }\n    return newTrack;\n  }\n\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs.unsubscribe();\n    this.canPlayObs.unsubscribe();\n    this.canPlayThroughObs.unsubscribe();\n    this.loadedMetadataObs.unsubscribe();\n    this.waitingObs.unsubscribe();\n    this.progressObs.unsubscribe();\n    this.endedObs.unsubscribe();\n    this.playingObs.unsubscribe();\n    this.playObs.unsubscribe();\n    this.pauseObs.unsubscribe();\n    this.timeUpdateObs.unsubscribe();\n    this.volumeChangeObs.unsubscribe();\n    this.errorObs.unsubscribe();\n\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    if (this.syncSubscription) {\n      this.syncSubscription.unsubscribe();\n    }\n\n    this.bufferDetected.complete();\n    this.bufferDetected.unsubscribe();\n\n    this.api.unregisterMedia(this);\n  }\n}\n","import {\n  Output,\n  Component,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  QueryList,\n  AfterContentInit,\n  ContentChildren,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '../../services/vg-api/vg-api.service';\nimport { VgFullscreenApiService } from '../../services/vg-fullscreen-api/vg-fullscreen-api.service';\nimport { VgControlsHiddenService } from '../../services/vg-controls-hidden/vg-controls-hidden.service';\nimport { VgMediaDirective } from '../../directives/vg-media/vg-media.directive';\nimport { VgUtilsService } from '../../services/vg-utils/vg-utils.service';\n\n@Component({\n  selector: 'vg-player',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [\n    `\n      vg-player {\n        font-family: 'videogular';\n        position: relative;\n        display: flex;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        background-color: black;\n      }\n      vg-player.fullscreen {\n        position: fixed;\n        left: 0;\n        top: 0;\n      }\n      vg-player.native-fullscreen.controls-hidden {\n        cursor: none;\n      }\n    `,\n  ],\n  providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\n})\nexport class VgPlayerComponent implements AfterContentInit, OnDestroy {\n  elem: HTMLElement;\n\n  @HostBinding('class.fullscreen') isFullscreen = false;\n  @HostBinding('class.native-fullscreen') isNativeFullscreen = false;\n  @HostBinding('class.controls-hidden') areControlsHidden = false;\n  @HostBinding('style.z-index') zIndex: string;\n\n  @Output() onPlayerReady: EventEmitter<VgApiService> = new EventEmitter<VgApiService>();\n  @Output() onMediaReady: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(VgMediaDirective) medias: QueryList<VgMediaDirective>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    ref: ElementRef,\n    public api: VgApiService,\n    public fsAPI: VgFullscreenApiService,\n    private controlsHidden: VgControlsHiddenService\n  ) {\n    this.elem = ref.nativeElement;\n\n    this.api.registerElement(this.elem);\n  }\n\n  ngAfterContentInit() {\n    this.medias.toArray().forEach((media) => {\n      this.api.registerMedia(media);\n    });\n\n    this.fsAPI.init(this.elem, this.medias);\n\n    this.subscriptions.push(\n      this.fsAPI.onChangeFullscreen.subscribe(\n        this.onChangeFullscreen.bind(this)\n      )\n    );\n    this.subscriptions.push(\n      this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this))\n    );\n\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    this.areControlsHidden = hidden;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgApiService } from './services/vg-api/vg-api.service';\nimport { VgControlsHiddenService } from './services/vg-controls-hidden/vg-controls-hidden.service';\nimport { VgFullscreenApiService } from './services/vg-fullscreen-api/vg-fullscreen-api.service';\nimport { VgUtilsService } from './services/vg-utils/vg-utils.service';\nimport { VgEvents } from './services/events/vg-events.service';\nimport { VgStates } from './services/states/vg-states.service';\nimport { VgCuePointsDirective } from './directives/vg-cue-points/vg-cue-points.directive';\nimport { VgMediaDirective } from './directives/vg-media/vg-media.directive';\nimport { VgPlayerComponent } from './components/vg-player/vg-player.component';\n\nconst services = [\n  VgApiService,\n  VgControlsHiddenService,\n  VgFullscreenApiService,\n  VgUtilsService,\n  VgEvents,\n  VgStates\n];\n\nconst directives = [\n  VgCuePointsDirective,\n  VgMediaDirective\n]\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [...services],\n  declarations: [...directives, VgPlayerComponent],\n  exports: [...directives, VgPlayerComponent]\n})\nexport class VgCoreModule {}\n","import { IMediaElement } from '../../interfaces/i-media-element.interface';\nimport { AudioTrackList, VideoTrackList } from '../../interfaces/deprecated-tracks-types.interface';\n\nexport class VgMediaElement implements IMediaElement {\n  id: string;\n  elem: any;\n  get audioTracks(): AudioTrackList {\n    return null;\n  }\n  autoplay: boolean;\n  buffered: TimeRanges;\n  controls: boolean;\n  crossOrigin: string | any;\n  currentSrc: string;\n  currentTime: number;\n  defaultMuted: boolean;\n  defaultPlaybackRate: number;\n  duration: number;\n  ended: boolean;\n  error: MediaError;\n  loop: boolean;\n  mediaKeys: MediaKeys | any;\n  msAudioCategory: string;\n  msAudioDeviceType: string;\n  msGraphicsTrustStatus: MSGraphicsTrust;\n  msKeys: MSMediaKeys;\n  msPlayToDisabled: boolean;\n  msPlayToPreferredSourceUri: string;\n  msPlayToPrimary: boolean;\n  msPlayToSource: any;\n  msRealTime: boolean;\n  muted: boolean;\n  networkState: number;\n  onencrypted: (ev: MediaEncryptedEvent) => any;\n  onmsneedkey: (ev: MSMediaKeyNeededEvent) => any;\n  paused: boolean;\n  playbackRate: number;\n  played: TimeRanges;\n  preload: string;\n  readyState: number;\n  seekable: TimeRanges;\n  seeking: boolean;\n  src: string;\n  srcObject: MediaStream | any;\n  textTracks: TextTrackList;\n  videoTracks: VideoTrackList;\n  volume: number;\n  HAVE_CURRENT_DATA: number;\n  HAVE_ENOUGH_DATA: number;\n  HAVE_FUTURE_DATA: number;\n  HAVE_METADATA: number;\n  HAVE_NOTHING: number;\n  NETWORK_EMPTY: number;\n  NETWORK_IDLE: number;\n  NETWORK_LOADING: number;\n  NETWORK_NO_SOURCE: number;\n  // @ts-ignore\n  addTextTrack(kind: string, label?: string, language?: string): TextTrack {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type: string): string {\n    return null;\n  }\n\n  load(): void {}\n\n  msClearEffects(): void {}\n\n  msGetAsCastingSource(): any {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(\n    _activatableClassId: string,\n    _effectRequired: boolean,\n    _config?: any\n  ): void {}\n  // @ts-ignore\n  msSetMediaKeys(mediaKeys: MSMediaKeys): void {}\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager?: any): void {}\n\n  pause(): void {}\n\n  play(): Promise<any> {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys: MediaKeys | any): Promise<void> {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(\n    _type: string,\n    _listener: EventListenerOrEventListenerObject,\n    _useCapture?: boolean\n  ): void {}\n}\n"]}