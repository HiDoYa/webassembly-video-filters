!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@videogular/ngx-videogular/core")):"function"==typeof define&&define.amd?define("@videogular/ngx-videogular/buffering",["exports","@angular/core","@angular/common","@videogular/ngx-videogular/core"],e):e(((n="undefined"!=typeof globalThis?globalThis:n||self).videogular=n.videogular||{},n.videogular["ngx-videogular"]=n.videogular["ngx-videogular"]||{},n.videogular["ngx-videogular"].buffering={}),n.ng.core,n.ng.common,n.videogular["ngx-videogular"].core)}(this,(function(n,e,i,o){"use strict";var r=function(){function n(n,e){this.API=e,this.checkInterval=50,this.currentPlayPos=0,this.lastPlayPos=0,this.subscriptions=[],this.isBuffering=!1,this.elem=n.nativeElement}return n.prototype.ngOnInit=function(){var n=this;this.API.isPlayerReady?this.onPlayerReady():this.subscriptions.push(this.API.playerReadyEvent.subscribe((function(){return n.onPlayerReady()})))},n.prototype.onPlayerReady=function(){var n=this;this.target=this.API.getMediaById(this.vgFor),this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((function(e){return n.onUpdateBuffer(e)})))},n.prototype.onUpdateBuffer=function(n){this.isBuffering=n},n.prototype.ngOnDestroy=function(){this.subscriptions.forEach((function(n){return n.unsubscribe()}))},n}();r.decorators=[{type:e.Component,args:[{selector:"vg-buffering",encapsulation:e.ViewEncapsulation.None,template:'<div class="vg-buffering">\n    <div class="bufferingContainer">\n      <div class="loadingSpinner"></div>\n    </div>\n  </div>',styles:["\n      vg-buffering {\n        display: none;\n        z-index: 201;\n      }\n      vg-buffering.is-buffering {\n        display: block;\n      }\n\n      .vg-buffering {\n        position: absolute;\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      .vg-buffering .bufferingContainer {\n        width: 100%;\n        position: absolute;\n        cursor: pointer;\n        top: 50%;\n        margin-top: -50px;\n        zoom: 1;\n        filter: alpha(opacity=60);\n        opacity: 0.6;\n      }\n      /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n      .vg-buffering .loadingSpinner {\n        background-color: rgba(0, 0, 0, 0);\n        border: 5px solid rgba(255, 255, 255, 1);\n        opacity: 0.9;\n        border-top: 5px solid rgba(0, 0, 0, 0);\n        border-left: 5px solid rgba(0, 0, 0, 0);\n        border-radius: 50px;\n        box-shadow: 0 0 35px #ffffff;\n        width: 50px;\n        height: 50px;\n        margin: 0 auto;\n        -moz-animation: spin 0.5s infinite linear;\n        -webkit-animation: spin 0.5s infinite linear;\n      }\n      .vg-buffering .loadingSpinner .stop {\n        -webkit-animation-play-state: paused;\n        -moz-animation-play-state: paused;\n      }\n      @-moz-keyframes spin {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(360deg);\n        }\n      }\n      @-moz-keyframes spinoff {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(-360deg);\n        }\n      }\n      @-webkit-keyframes spin {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n      @-webkit-keyframes spinoff {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(-360deg);\n        }\n      }\n    "]}]}],r.ctorParameters=function(){return[{type:e.ElementRef},{type:o.VgApiService}]},r.propDecorators={vgFor:[{type:e.Input}],isBuffering:[{type:e.HostBinding,args:["class.is-buffering"]}]};var t=function(){};t.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,o.VgCoreModule],declarations:[r],exports:[r]}]}],n.VgBufferingComponent=r,n.VgBufferingModule=t,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=videogular-ngx-videogular-buffering.umd.min.js.map