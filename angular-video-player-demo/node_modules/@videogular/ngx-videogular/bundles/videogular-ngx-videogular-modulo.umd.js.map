{"version":3,"file":"videogular-ngx-videogular-modulo.umd.js","sources":["../../libs/ngx-videogular/modulo/src/lib/utils/modulo.ts","../../libs/ngx-videogular/modulo/src/lib/components/vg-modulo.component.ts","../modulo/src/lib/modulo.module.ts"],"sourcesContent":["import {FluctusInterface} from '../interfaces/fluctus.interface';\n\nconst AudioContext = window[\"AudioContext\"] || window[\"webkitAudioContext\"];\n\nexport class Gondolo implements FluctusInterface {\n  ctx: AudioContext;\n  analyser: AnalyserNode | Array<AnalyserNode>;\n  stereo: boolean;\n  audible: boolean;\n  wavedata: Uint8Array | null;\n  freqdata: any;\n  splitter: ChannelSplitterNode | null;\n  merger: ChannelMergerNode | null;\n  source: MediaElementAudioSourceNode | MediaStreamAudioSourceNode;\n  output: ChannelMergerNode;\n\n  constructor(\n    audio:\n      | HTMLAudioElement\n      | AudioNode\n      | MediaStream\n      | MediaElementAudioSourceNode\n      | MediaStreamAudioSourceNode,\n    ctx?: AudioContext | any,\n    opts?: { stereo?: boolean; audible?: boolean }\n  ) {\n    if (!(this instanceof Gondolo)) {\n      return new Gondolo(audio, ctx, opts);\n    }\n\n    if (!(ctx instanceof AudioContext)) {\n      (opts = ctx), (ctx = null);\n    }\n\n    opts = opts || {};\n    this.ctx = ctx = ctx || new AudioContext();\n\n    if (!(audio instanceof AudioNode)) {\n      audio =\n        audio instanceof Audio || audio instanceof HTMLAudioElement\n          ? ctx.createMediaElementSource(audio)\n          : ctx.createMediaStreamSource(audio);\n    }\n\n    this.audioConfigStateResolver(ctx, opts, audio);\n    this.audioConfigStateParser(ctx);\n  }\n\n  public waveform(output?: Uint8Array, channel?: number): Uint8Array {\n    if (!output) {\n      output =\n        this.wavedata ||\n        (this.wavedata = new Uint8Array(\n          (this.analyser[0] || this.analyser).frequencyBinCount\n        ));\n    }\n\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n\n    analyser.getByteTimeDomainData(output);\n\n    return output;\n  }\n\n  public frequencies(output?: Uint8Array, channel?: number): Uint8Array {\n    if (!output) {\n      output =\n        this.freqdata ||\n        (this.freqdata = new Uint8Array(\n          (this.analyser[0] || this.analyser).frequencyBinCount\n        ));\n    }\n\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n\n    analyser.getByteFrequencyData(output);\n\n    return output;\n  }\n\n  private audioConfigStateResolver(\n    ctx: AudioContext,\n    opts: { stereo?: boolean; audible?: boolean },\n    audio: MediaElementAudioSourceNode | any\n  ): void {\n    this.analyser = ctx.createAnalyser();\n    this.stereo = !!opts.stereo;\n    this.audible = opts.audible !== false;\n    this.wavedata = null;\n    this.freqdata = null;\n    this.splitter = null;\n    this.merger = null;\n    this.source = audio;\n  }\n\n  private audioConfigStateParser(ctx: AudioContext) {\n    if (!this.stereo) {\n      this.output = this.source;\n\n      this.source.connect(this.analyser[0] || this.analyser);\n\n      if (this.audible) {\n        (this.analyser[0] || this.analyser).connect(ctx.destination);\n      }\n    } else {\n      this.analyser = [this.analyser[0] || this.analyser];\n\n      this.analyser.push(ctx.createAnalyser());\n\n      this.splitter = ctx.createChannelSplitter(2);\n      this.merger = ctx.createChannelMerger(2);\n      this.output = this.merger;\n\n      this.source.connect(this.splitter);\n\n      for (let i = 0; i < 2; i++) {\n        this.splitter.connect(this.analyser[i], i, 0);\n        this.analyser[i].connect(this.merger, 0, i);\n      }\n\n      if (this.audible) {\n        this.merger.connect(ctx.destination);\n      }\n    }\n  }\n}\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { ModuloConfig } from '../interfaces/modulo-config.interface';\nimport { Gondolo } from \"../utils/modulo\";\n\n@Component({\n  selector: \"vg-modulo\",\n  templateUrl: \"./vg-modulo.component.html\",\n})\nexport class VgModuloComponent {\n  private _audioAnalyser: Gondolo;\n  private _ctx: CanvasRenderingContext2D;\n\n  @Input() moduloConfig: ModuloConfig;\n  @Input() audioElement: HTMLAudioElement;\n\n  @ViewChild(\"waveCanvas\", { static: false }) waveCanvas: ElementRef<HTMLCanvasElement>;\n\n  public startVisualizer() {\n    if (!this._audioAnalyser) {\n      this._audioAnalyser = new Gondolo(this.audioElement);\n\n      const {width, height} = this.moduloConfig.dimensions;\n      const canvasElement = this.waveCanvas.nativeElement;\n\n      this._ctx = canvasElement.getContext(\"2d\");\n\n      canvasElement.width = width;\n      canvasElement.height = height;\n    }\n\n    this.update();\n  }\n\n  public update() {\n    const audioFreq = this._audioAnalyser.waveform();\n    const {fillStyle, strokeStyle, lineWidth, scaleFactor} = this.moduloConfig;\n    const {width, height} = this.waveCanvas.nativeElement;\n\n    // Clear canvas\n    this._ctx.fillStyle = fillStyle;\n    this._ctx.fillRect(0, 0, width, height);\n\n    this._ctx.strokeStyle = strokeStyle;\n    this._ctx.lineWidth = lineWidth;\n\n    // Draw frequency lines\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, height / 2 - audioFreq[0] * scaleFactor);\n\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(\n        (width / audioFreq.length) * i,\n        height / 2 - audioFreq[i] * scaleFactor\n      );\n    }\n\n    this._ctx.moveTo(0, height / 2 + audioFreq[0] * scaleFactor);\n\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(\n        (width / audioFreq.length) * i,\n        height / 2 + audioFreq[i] * scaleFactor\n      );\n    }\n\n    this._ctx.stroke();\n\n    window.requestAnimationFrame(() => this.update());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { VgModuloComponent } from \"./components/vg-modulo.component\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [VgModuloComponent],\n  exports: [VgModuloComponent],\n})\nexport class VgModuloModule {}\n"],"names":["Component","Input","ViewChild","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;QAEM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,oBAAoB,CAAC;;;;;;;QAczE,iBACE,KAK8B,EAC9B,GAAwB,EACxB,IAA8C;YAE9C,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE;gBAC9B,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;aACtC;YAED,IAAI,EAAE,GAAG,YAAY,YAAY,CAAC,EAAE;gBAClC,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;aAC5B;YAED,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,YAAY,EAAE,CAAC;YAE3C,IAAI,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE;gBACjC,KAAK;oBACH,KAAK,YAAY,KAAK,IAAI,KAAK,YAAY,gBAAgB;0BACvD,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC;0BACnC,GAAG,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;aAC1C;YAED,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;SAClC;;;;;;QAEM,0BAAQ,GAAR,UAAS,MAAmB,EAAE,OAAgB;YACnD,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM;oBACJ,IAAI,CAAC,QAAQ;yBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAC7B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CACtD,CAAC,CAAC;aACN;;gBAEK,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ;YAE1E,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YAEvC,OAAO,MAAM,CAAC;SACf;;;;;;QAEM,6BAAW,GAAX,UAAY,MAAmB,EAAE,OAAgB;YACtD,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM;oBACJ,IAAI,CAAC,QAAQ;yBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAC7B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CACtD,CAAC,CAAC;aACN;;gBAEK,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ;YAE1E,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAEtC,OAAO,MAAM,CAAC;SACf;;;;;;;;QAEO,0CAAwB,GAAxB,UACN,GAAiB,EACjB,IAA6C,EAC7C,KAAwC;YAExC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;;;;;;QAEO,wCAAsB,GAAtB,UAAuB,GAAiB;YAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAE1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEvD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;iBAC9D;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;gBAEzC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAE1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7C;gBAED,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;iBACtC;aACF;SACF;sBACF;KAAA,IAAA;;;QAxHC,sBAAkB;;QAClB,2BAA6C;;QAC7C,yBAAgB;;QAChB,0BAAiB;;QACjB,2BAA4B;;QAC5B,2BAAc;;QACd,2BAAqC;;QACrC,yBAAiC;;QACjC,yBAAiE;;QACjE,yBAA0B;;;;;;;;;QCN5B;;;;;QASS,2CAAe,GAAf;YACL,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE/C,IAAA,KAAkB,IAAI,CAAC,YAAY,CAAC,UAAU,EAA7C,KAAK,WAAA,EAAE,MAAM,YAAgC;;oBAC9C,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;gBAEnD,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAE3C,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC5B,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;aAC/B;YAED,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;;;;QAEM,kCAAM,GAAN;YAAA,iBAmCN;;gBAlCO,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YAC1C,IAAA,KAAmD,IAAI,CAAC,YAAY,EAAnE,SAAS,eAAA,EAAE,WAAW,iBAAA,EAAE,SAAS,eAAA,EAAE,WAAW,iBAAqB;YACpE,IAAA,KAAkB,IAAI,CAAC,UAAU,CAAC,aAAa,EAA9C,KAAK,WAAA,EAAE,MAAM,YAAiC;;YAGrD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;YAGhC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;YAE7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,IAAI,CAAC,MAAM,CACd,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,EAC9B,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CACxC,CAAC;aACH;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;YAE7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,IAAI,CAAC,MAAM,CACd,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,EAC9B,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CACxC,CAAC;aACH;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAEnB,MAAM,CAAC,qBAAqB;;eAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,EAAC,CAAC;SACnD;;;;gBAhEFA,cAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,2CAAyC;iBAC1C;;;+BAKEC,UAAK;+BACLA,UAAK;6BAELC,cAAS,SAAC,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;;;;;;QAN1C,2CAAgC;;;;;QAChC,iCAAuC;;QAEvC,yCAAoC;;QACpC,yCAAwC;;QAExC,uCAAsF;;;;;;;;;QCJxF;;;;;gBAPCC,aAAQ,SAAC;oBACR,OAAO,EAAE;wBACPC,mBAAY;qBACb;oBACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B;;;;;;;;;;;;;;;;;;;;;;;;;"}