{"version":3,"sources":["../ima-ads/src/lib/vg-ima-ads.component.ts","../ima-ads/src/lib/ima-ads.module.ts"],"names":["VgImaAdsComponent","ref","API","fsAPI","this","vgSkipButtonLocale","onAdStart","EventEmitter","onAdStop","onSkipAd","isFullscreen","subscriptions","displayState","elem","nativeElement","onContentEnded","bind","prototype","ngOnInit","_this","isPlayerReady","onPlayerReady","push","playerReadyEvent","subscribe","google","target","getMediaById","vgFor","initializations","ended","play","onUpdateState","onChangeFullscreen","ima","adsLoader","addEventListener","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","loadAds","onMissingGoogleImaLoader","Ima","vgSkipButton","skipButton","document","querySelector","style","display","onClickSkip","insertBefore","firstChild","window","w","videogularElement","offsetWidth","h","offsetHeight","adsManager","resize","ViewMode","FULLSCREEN","NORMAL","vgCompanion","googletag","cmd","adUnitPath","vgNetwork","vgUnitPath","slot","defineSlot","vgCompanionSize","addService","companionAds","pubads","setRefreshUnfilledSlots","enableVideoAds","enableServices","event","type","VgEvents","VG_PLAY","adsLoaded","pause","adDisplayContainer","initialize","requestAds","vgAdTagUrl","adTagUrl","show","adsRequest","AdsRequest","computedStyle","getComputedStyle","linearAdSlotWidth","parseInt","width","linearAdSlotHeight","height","nonLinearAdSlotWidth","nonLinearAdSlotHeight","evt","getAdsManager","processAdsManager","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","SKIPPABLE_STATE_CHANGED","onSkippableStateChanged","ALL_ADS_COMPLETED","onAllAdsComplete","COMPLETE","onAdComplete","init","start","isSkippable","getAdSkippableState","skip","emit","hide","destroy","getCuePoints","join","indexOf","currentAd","dispatchEvent","CustomEvent","VG_START_ADS","VG_END_ADS","contentComplete","fsState","nativeFullscreen","ngOnDestroy","forEach","s","unsubscribe","Component","args","selector","encapsulation","ViewEncapsulation","None","template","ElementRef","VgApiService","VgFullscreenApiService","Input","Output","HostBinding","imaAdsElement","imaSkipButtonLocale","setLocale","AdDisplayContainer","AdsLoader","NgModule","imports","CommonModule","VgCoreModule","declarations","exports"],"mappings":"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","sourcesContent":["import './google.ima';\nimport {\n  Component,\n  ElementRef,\n  Input,\n  HostBinding,\n  ViewEncapsulation,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  IPlayable,\n  VgApiService,\n  VgFullscreenApiService,\n  VgEvents,\n} from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-ima-ads',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-ima-ads\"></div>`,\n  styles: [\n    `\n      vg-ima-ads {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        z-index: 300;\n      }\n      vg-ima-ads .vg-ima-ads {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n      }\n    `,\n  ],\n})\nexport class VgImaAdsComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgNetwork: string;\n  @Input() vgUnitPath: string;\n  @Input() vgCompanion: string;\n  @Input() vgCompanionSize: number[];\n  @Input() vgAdTagUrl: string;\n  @Input() vgSkipButton: string;\n  @Input() vgSkipButtonLocale = 'en';\n\n  @Output() onAdStart: EventEmitter<boolean> = new EventEmitter();\n  @Output() onAdStop: EventEmitter<boolean> = new EventEmitter();\n  @Output() onSkipAd: EventEmitter<boolean> = new EventEmitter();\n\n  elem: HTMLElement;\n  target: IPlayable;\n  ima: Ima;\n  isFullscreen = false;\n  skipButton: HTMLElement;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('style.display') displayState = 'none';\n\n  constructor(\n    ref: ElementRef,\n    public API: VgApiService,\n    public fsAPI: VgFullscreenApiService\n  ) {\n    this.elem = ref.nativeElement;\n    this.onContentEnded = this.onContentEnded.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    if (typeof google === 'undefined') {\n      this.onMissingGoogleImaLoader();\n      return;\n    }\n\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.initializations();\n\n    this.subscriptions.push(\n      this.target.subscriptions.ended.subscribe(this.onContentEnded.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.play.subscribe(this.onUpdateState.bind(this))\n    );\n\n    this.subscriptions.push(\n      this.fsAPI.onChangeFullscreen.subscribe(\n        this.onChangeFullscreen.bind(this)\n      )\n    );\n\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      this.onAdsManagerLoaded.bind(this),\n      false\n    );\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.loadAds();\n  }\n\n  initializations() {\n    this.ima = new Ima(this.elem, this.vgSkipButtonLocale);\n\n    if (this.vgSkipButton) {\n      this.skipButton = document.querySelector(\n        this.vgSkipButton\n      ) as HTMLElement;\n      this.skipButton.style.display = 'none';\n      this.skipButton.addEventListener('click', this.onClickSkip.bind(this));\n      this.elem.insertBefore(this.skipButton, this.elem.firstChild);\n    }\n\n    window.addEventListener('resize', () => {\n      const w = this.API.videogularElement.offsetWidth;\n      const h = this.API.videogularElement.offsetHeight;\n\n      if (this.ima.adsManager) {\n        if (this.isFullscreen) {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n        } else {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n        }\n      }\n    });\n  }\n\n  loadAds() {\n    if (this.vgCompanion) {\n      googletag.cmd.push(() => {\n        const adUnitPath: string = '/' + this.vgNetwork + '/' + this.vgUnitPath;\n        const slot: googletag.Slot = googletag.defineSlot(\n          adUnitPath,\n          this.vgCompanionSize,\n          this.vgCompanion\n        );\n\n        if (slot) {\n          slot.addService(googletag.companionAds());\n          slot.addService(googletag.pubads());\n\n          googletag.companionAds().setRefreshUnfilledSlots(true);\n\n          googletag.pubads().enableVideoAds();\n\n          googletag.enableServices();\n        }\n      });\n    }\n  }\n\n  onUpdateState(event: any) {\n    switch (event.type) {\n      case VgEvents.VG_PLAY:\n        if (!this.ima.adsLoaded) {\n          this.API.pause();\n          this.ima.adDisplayContainer.initialize();\n          this.requestAds(this.vgAdTagUrl);\n          this.ima.adsLoaded = true;\n        }\n        break;\n    }\n  }\n\n  requestAds(adTagUrl: string) {\n    // Show only to get computed style in pixels\n    this.show();\n\n    const adsRequest = new google.ima.AdsRequest();\n    const computedStyle = window.getComputedStyle(this.elem);\n    adsRequest.adTagUrl = adTagUrl;\n\n    adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n    adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n\n    this.ima.adsLoader.requestAds(adsRequest);\n  }\n\n  onAdsManagerLoaded(evt: google.ima.AdsManagerLoadedEvent) {\n    this.show();\n    this.ima.adsManager = evt.getAdsManager(this.target);\n    this.processAdsManager(this.ima.adsManager);\n  }\n  // @ts-ignore\n  processAdsManager(adsManager: google.ima.AdsManager) {\n    const w = this.API.videogularElement.offsetWidth;\n    const h = this.API.videogularElement.offsetHeight;\n\n    // Attach the pause/resume events.\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n      this.onContentPauseRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n      this.onContentResumeRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n      this.onSkippableStateChanged.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n      this.onAllAdsComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.COMPLETE,\n      this.onAdComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.ima.adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n    this.ima.adsManager.start();\n  }\n\n  onSkippableStateChanged() {\n    const isSkippable = this.ima.adsManager.getAdSkippableState();\n\n    if (isSkippable) {\n      this.skipButton.style.display = 'block';\n    } else {\n      this.skipButton.style.display = 'none';\n    }\n  }\n\n  onClickSkip() {\n    this.ima.adsManager.skip();\n    this.onSkipAd.emit(true);\n  }\n\n  onContentPauseRequested() {\n    this.show();\n    this.API.pause();\n    this.onAdStop.emit(true);\n  }\n\n  onContentResumeRequested() {\n    this.API.play();\n    this.onAdStart.emit(true);\n    this.hide();\n  }\n  // @ts-ignore\n  onAdError(evt) {\n    if (this.ima.adsManager) {\n      this.ima.adsManager.destroy();\n    }\n    this.hide();\n    this.API.play();\n    this.onAdStop.emit(true);\n  }\n\n  onAllAdsComplete() {\n    this.hide();\n    // The last ad was a post-roll\n    if (this.ima.adsManager.getCuePoints().join().indexOf('-1') >= 0) {\n      this.API.pause(); // it was stop() in Videogular v1\n      this.onAdStop.emit(true);\n    }\n  }\n\n  onAdComplete() {\n    // TODO: Update view with current ad count\n    this.ima.currentAd++;\n    this.onAdStop.emit(true);\n  }\n\n  show() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_START_ADS));\n    this.displayState = 'block';\n  }\n\n  hide() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_END_ADS));\n    this.displayState = 'none';\n  }\n\n  onContentEnded() {\n    this.ima.adsLoader.contentComplete();\n    this.onAdStop.emit(true);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n    }\n  }\n\n  private onMissingGoogleImaLoader() {\n    this.hide();\n    this.API.play();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\nexport class Ima {\n  adDisplayContainer: google.ima.AdDisplayContainer;\n  adsLoader: google.ima.AdsLoader;\n  adsManager: google.ima.AdsManager;\n  adsLoaded: boolean;\n  currentAd: number;\n\n  constructor(imaAdsElement: HTMLElement, imaSkipButtonLocale: string) {\n    if (!!google?.ima['settings'] && imaSkipButtonLocale) {\n      google.ima['settings'].setLocale(imaSkipButtonLocale);\n    }\n\n    this.adDisplayContainer = new google.ima.AdDisplayContainer(imaAdsElement);\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n    this.adsManager = null;\n    this.adsLoaded = false;\n    this.currentAd = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgImaAdsComponent } from './vg-ima-ads.component';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\n\n@NgModule({\n  imports: [CommonModule, VgCoreModule],\n  declarations: [VgImaAdsComponent],\n  exports: [VgImaAdsComponent],\n})\nexport class VgImaAdsModule {}\n"]}