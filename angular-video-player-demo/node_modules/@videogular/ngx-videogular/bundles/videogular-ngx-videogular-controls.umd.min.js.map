{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../libs/ngx-videogular/controls/src/lib/components/vg-controls/vg-controls.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-volume/vg-volume.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-track-selector/vg-track-selector.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-time-display/vg-time-display.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-scrub-bar/vg-scrub-bar.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-quality-selector/vg-quality-selector.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-playback-button/vg-playback-button.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-play-pause/vg-play-pause.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-mute/vg-mute.component.ts","../libs/ngx-videogular/controls/src/lib/components/vg-fullscreen/vg-fullscreen.component.ts","../esm2015/libs/ngx-videogular/controls/src/lib/components/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.component.ts","../esm2015/libs/ngx-videogular/controls/src/lib/components/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.component.ts","../esm2015/libs/ngx-videogular/controls/src/lib/components/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.component.ts","../controls/src/lib/controls.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","VgControlsComponent","API","ref","hidden","this","isAdsPlaying","hideControls","vgAutohide","vgAutohideTime","subscriptions","elem","nativeElement","prototype","ngOnInit","_this","mouseMove$","fromEvent","videogularElement","subscribe","show","bind","touchStart$","isPlayerReady","onPlayerReady","playerReadyEvent","target","getMediaById","vgFor","play","onPlay","pause","onPause","startAds","onStartAds","endAds","onEndAds","ngAfterViewInit","hide","clearTimeout","timer","state","hideAsync","VgStates","VG_PLAYING","setTimeout","ngOnDestroy","forEach","s","unsubscribe","Component","args","selector","encapsulation","ViewEncapsulation","None","template","VgApiService","ElementRef","VgControlsHiddenService","HostBinding","Input","VgVolumeComponent","isDragging","ariaValue","getVolume","onClick","event","setVolume","calculateVolume","clientX","onMouseDown","mouseDownPosX","onDrag","onStopDrag","arrowAdjustVolume","keyCode","preventDefault","Math","max","min","mousePosX","recObj","volumeBarRef","getBoundingClientRect","left","width","vol","volume","ViewChild","static","HostListener","VgTrackSelectorComponent","subs","Array","from","getMasterMedia","children","filter","item","tagName","kind","map","label","selected","default","id","srclang","tracks","every","track","trackSelected","selectTrack","trackId","textTracks","language","mode","VgUtcPipe","transform","format","date","Date","result","ss","getUTCSeconds","mm","getUTCMinutes","hh","getUTCHours","replace","Pipe","name","VgTimeDisplayComponent","vgProperty","vgFormat","getTime","t","round","time","isNaN","isLive","VgScrubBarComponent","vgControlsHiddenState","hideScrubBar","vgSlider","isSeeking","wasPlaying","isHidden","onHideScrubBar","seekStart","canPlay","seekMove","offset","percentage","scrollWidth","current","total","seekTime","seekEnd","touchEnd","getTouchOffset","offsetLeft","element","offsetParent","touches","pageX","onMouseDownScrubBar","$event","offsetX","onMouseMoveScrubBar","onMouseUpScrubBar","onTouchStartScrubBar","onTouchMoveScrubBar","onTouchCancelScrubBar","_$event","onTouchEndScrubBar","getPercentage","VgQualitySelectorComponent","onBitrateChange","EventEmitter","ngOnChanges","changes","bitrates","currentValue","bitrate","toString","selectBitrate","index","bitrateSelected","emit","Output","VgPlaybackButtonComponent","cdr","playbackValues","playbackIndex","updatePlaybackSpeed","onKeyDown","playbackRate","detectChanges","getPlaybackRate","console","warn","ChangeDetectorRef","VgPlayPauseComponent","VG_PAUSED","playPause","getState","VG_ENDED","VgMuteComponent","currentVolume","changeMuteState","VgFullscreenComponent","fsAPI","isFullscreen","onChangeFullscreen","fsState","changeFullscreenState","toggleFullscreen","VgFullscreenApiService","VgScrubBarBufferingTimeComponent","getBufferTime","bufferTime","buffer","buffered","end","VgScrubBarCuePointsComponent","onLoadedMetadataCalled","cuePoints","totalCues","onTimeUpdate","loadedMetadata","onLoadedMetadata","vgCuePoints","l","cuePointDuration","endTime","startTime","position","percentWidth","$$style","updateCuePoints","ngDoCheck","VgScrubBarCurrentTimeComponent","components","NgModule","imports","CommonModule","VgCoreModule","declarations","exports"],"mappings":";;;;;;;;;;;;;;oFAyG6BA,OAAOC,gBAwBpBC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,WAGKM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,EA8CcZ,OAAOC,wBCzI9B,SAAAqB,EACUC,EACRC,EACQC,GAFAC,KAAAH,IAAAA,EAEAG,KAAAD,OAAAA,EAjB2BC,KAAAC,aAAe,UACzBD,KAAAE,cAAe,EAGjCF,KAAAG,YAAa,EACbH,KAAAI,eAAiB,EAO1BJ,KAAAK,cAAgC,GAO9BL,KAAKM,KAAOR,EAAIS,qBAGlBX,EAAAY,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACEA,KAAKW,WAAaC,EAAAA,UAAUZ,KAAKH,IAAIgB,kBAAmB,aACxDb,KAAKK,cAAchB,KAAKW,KAAKW,WAAWG,UAAUd,KAAKe,KAAKC,KAAKhB,QAEjEA,KAAKiB,YAAcL,EAAAA,UAAUZ,KAAKH,IAAIgB,kBAAmB,cACzDb,KAAKK,cAAchB,KAAKW,KAAKiB,YAAYH,UAAUd,KAAKe,KAAKC,KAAKhB,QAE9DA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDvB,EAAAY,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,OAEzCvB,KAAKK,cAAchB,KACjBW,KAAKqB,OAAOhB,cAAcmB,KAAKV,UAAUd,KAAKyB,OAAOT,KAAKhB,QAE5DA,KAAKK,cAAchB,KACjBW,KAAKqB,OAAOhB,cAAcqB,MAAMZ,UAAUd,KAAK2B,QAAQX,KAAKhB,QAE9DA,KAAKK,cAAchB,KACjBW,KAAKqB,OAAOhB,cAAcuB,SAASd,UAAUd,KAAK6B,WAAWb,KAAKhB,QAEpEA,KAAKK,cAAchB,KACjBW,KAAKqB,OAAOhB,cAAcyB,OAAOhB,UAAUd,KAAK+B,SAASf,KAAKhB,SAIlEJ,EAAAY,UAAAwB,gBAAA,WACMhC,KAAKG,WACPH,KAAKiC,OAELjC,KAAKe,QAITnB,EAAAY,UAAAiB,OAAA,WACMzB,KAAKG,YACPH,KAAKiC,QAITrC,EAAAY,UAAAmB,QAAA,WACEO,aAAalC,KAAKmC,OAClBnC,KAAKE,cAAe,EACpBF,KAAKD,OAAOqC,OAAM,IAGpBxC,EAAAY,UAAAqB,WAAA,WACE7B,KAAKC,aAAe,QAGtBL,EAAAY,UAAAuB,SAAA,WACE/B,KAAKC,aAAe,WAGtBL,EAAAY,UAAAyB,KAAA,WACMjC,KAAKG,aACP+B,aAAalC,KAAKmC,OAClBnC,KAAKqC,cAITzC,EAAAY,UAAAO,KAAA,WACEmB,aAAalC,KAAKmC,OAClBnC,KAAKE,cAAe,EACpBF,KAAKD,OAAOqC,OAAM,GAEdpC,KAAKG,YACPH,KAAKqC,aAIDzC,EAAAY,UAAA6B,UAAA,WAAA,IAAA3B,EAAAV,KACFA,KAAKH,IAAIuC,QAAUE,EAAAA,SAASC,aAC9BvC,KAAKmC,MAAQK,YAAU,WACrB9B,EAAKR,cAAe,EACpBQ,EAAKX,OAAOqC,OAAM,KACK,IAAtBpC,KAAKI,kBAIZR,EAAAY,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CA5IvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,oCAER,ogBAPKC,EAAAA,oBARPC,EAAAA,kBAQqBC,EAAAA,iEAgCpBC,EAAAA,YAAWT,KAAA,CAAC,8CACZS,EAAAA,YAAWT,KAAA,CAAC,6BAEZU,EAAAA,0BACAA,EAAAA,8BACAA,EAAAA,0BC+DD,SAAAC,EAAY3D,EAAwBD,GAAAG,KAAAH,IAAAA,EAFpCG,KAAAK,cAAgC,GAG9BL,KAAKM,KAAOR,EAAIS,cAChBP,KAAK0D,YAAa,SAGpBD,EAAAjD,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDsC,EAAAjD,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,OACzCvB,KAAK2D,UAA+B,IAAnB3D,KAAK4D,aAGxBH,EAAAjD,UAAAqD,QAAA,SAAQC,GACN9D,KAAK+D,UAAU/D,KAAKgE,gBAAgBF,EAAMG,WAG5CR,EAAAjD,UAAA0D,YAAA,SAAYJ,GACV9D,KAAKmE,cAAgBL,EAAMG,QAC3BjE,KAAK0D,YAAa,GAIpBD,EAAAjD,UAAA4D,OAAA,SAAON,GACD9D,KAAK0D,YACP1D,KAAK+D,UAAU/D,KAAKgE,gBAAgBF,EAAMG,WAK9CR,EAAAjD,UAAA6D,WAAA,SAAWP,GACL9D,KAAK0D,aACP1D,KAAK0D,YAAa,EACd1D,KAAKmE,gBAAkBL,EAAMG,SAC/BjE,KAAK+D,UAAU/D,KAAKgE,gBAAgBF,EAAMG,YAMhDR,EAAAjD,UAAA8D,kBAAA,SAAkBR,GACM,KAAlBA,EAAMS,SAAoC,KAAlBT,EAAMS,SAChCT,EAAMU,iBACNxE,KAAK+D,UAAUU,KAAKC,IAAI,EAAGD,KAAKE,IAAI,IAAwB,IAAnB3E,KAAK4D,YAAoB,OACvC,KAAlBE,EAAMS,SAAoC,KAAlBT,EAAMS,UACvCT,EAAMU,iBACNxE,KAAK+D,UAAUU,KAAKC,IAAI,EAAGD,KAAKE,IAAI,IAAwB,IAAnB3E,KAAK4D,YAAoB,QAItEH,EAAAjD,UAAAwD,gBAAA,SAAgBY,OACRC,EAAS7E,KAAK8E,aAAavE,cAAcwE,wBAG/C,OAASH,EAF2BC,EAAOG,MACZH,EAAOI,MACwB,KAGhExB,EAAAjD,UAAAuD,UAAA,SAAUmB,GACRlF,KAAKqB,OAAO8D,OAASV,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGO,EAAM,MACnDlF,KAAK2D,UAAiC,IAArB3D,KAAKqB,OAAO8D,QAG/B1B,EAAAjD,UAAAoD,UAAA,WACE,OAAO5D,KAAKqB,OAASrB,KAAKqB,OAAO8D,OAAS,GAG5C1B,EAAAjD,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CA7KvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,mwBA6BR,64CA1CFE,EAAAA,kBAQOD,EAAAA,+CAyFNI,EAAAA,4BACA4B,EAAAA,UAAStC,KAAA,CAAC,YAAa,CAAEuC,QAAQ,oBAwCjCC,EAAAA,aAAYxC,KAAA,CAAC,qBAAsB,CAAC,+BAOpCwC,EAAAA,aAAYxC,KAAA,CAAC,mBAAoB,CAAC,sCAUlCwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BC3C1B,SAAAyC,EAAYzF,EAAwBD,GAAAG,KAAAH,IAAAA,EAJpCG,KAAAK,cAAgC,GAK9BL,KAAKM,KAAOR,EAAIS,qBAGlBgF,EAAA/E,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDoE,EAAA/E,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,WAEnCiE,EAAsBC,MAAMC,KAC/B1F,KAAKH,IAAI8F,iBAAqB,KAAsBC,UAEpDC,QAAM,SAAEC,GAAsB,MAAiB,UAAjBA,EAAKC,WACnCF,QAAM,SAAEC,GAA2B,MAAc,cAAdA,EAAKE,QACxCC,KAAG,SAAEH,GAA2B,MAAA,CAC/BI,MAAOJ,EAAKI,MACZC,UAA2B,IAAjBL,EAAKM,QACfC,GAAIP,EAAKQ,YAGbtG,KAAKuG,OAAM/G,EACNgG,EAAI,CACP,CACEa,GAAI,KACJH,MAAO,MACPC,SAAUX,EAAKgB,OAAK,SAAEV,GAAiB,OAAkB,IAAlBA,EAAKK,mBAI1CM,EAAgBzG,KAAKuG,OAAOV,QAAM,SACrCC,GAAiB,OAAkB,IAAlBA,EAAKK,YACvB,GACFnG,KAAK0G,cAAgBD,EAAMJ,GAC3BrG,KAAK2D,UAAY8C,EAAMP,OAGzBX,EAAA/E,UAAAmG,YAAA,SAAYC,GAAZ,IAAAlG,EAAAV,KACEA,KAAK0G,cAA4B,SAAZE,EAAqB,KAAOA,EAEjD5G,KAAK2D,UAAY,oBAEjB8B,MAAMC,KACH1F,KAAKH,IAAI8F,iBAAqB,KAAsBkB,YACrDnE,SAAO,SAAEoD,GACLA,EAAKgB,WAAaF,GACpBlG,EAAKiD,UAAYmC,EAAKI,MACtBJ,EAAKiB,KAAO,WAEZjB,EAAKiB,KAAO,aAKlBxB,EAAA/E,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAhKvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,8nBA0BR,wgDA5CFE,EAAAA,kBAOOD,EAAAA,+CA+FNI,EAAAA,0BCzFH,SAAAwD,YACEA,EAAAxG,UAAAyG,UAAA,SAAU3H,EAAe4H,OACnBC,EAAO,IAAIC,KAAK9H,GAChB+H,EAASH,EACTI,EAAsBH,EAAKI,gBAC3BC,EAAsBL,EAAKM,gBAC3BC,EAAsBP,EAAKQ,cAgB/B,OAdIL,EAAK,KACPA,EAAK,IAAMA,GAETE,EAAK,KACPA,EAAK,IAAMA,GAETE,EAAK,KACPA,EAAK,IAAMA,GAKbL,GADAA,GADAA,EAASA,EAAOO,QAAQ,MAAK,IACbA,QAAQ,MAAK,IACbA,QAAQ,MAAK,6BArBhCC,EAAAA,KAAI/E,KAAA,CAAC,CAAEgF,KAAM,6BAkEZ,SAAAC,EAAYjI,EAAwBD,GAAAG,KAAAH,IAAAA,EAR3BG,KAAAgI,WAAa,UACbhI,KAAAiI,SAAW,QAKpBjI,KAAAK,cAAgC,GAG9BL,KAAKM,KAAOR,EAAIS,qBAGlBwH,EAAAvH,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrD4G,EAAAvH,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAG3CwG,EAAAvH,UAAA0H,QAAA,eACMC,EAAI,EAOR,OALInI,KAAKqB,SACP8G,EAAI1D,KAAK2D,MAAMpI,KAAKqB,OAAOgH,KAAKrI,KAAKgI,aACrCG,EAAIG,MAAMH,IAAMnI,KAAKqB,OAAOkH,OAAS,EAAIJ,GAGpCA,GAGTJ,EAAAvH,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CArEvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,wKAMR,uhBA/CFE,EAAAA,kBAQOD,EAAAA,+CA4DNI,EAAAA,0BACAA,EAAAA,wBACAA,EAAAA,0BC0BD,SAAAgF,EACE1I,EACOD,EACP4I,GAHF,IAAA/H,EAAAV,KAESA,KAAAH,IAAAA,EAdkBG,KAAA0I,cAAe,EAGjC1I,KAAA2I,UAAW,EAIpB3I,KAAA4I,WAAY,EACZ5I,KAAA6I,YAAa,EAEb7I,KAAAK,cAAgC,GAO9BL,KAAKM,KAAOR,EAAIS,cAChBP,KAAKK,cAAchB,KACjBoJ,EAAsBK,SAAShI,WAAS,SAAEmB,GACxC,OAAAvB,EAAKqI,eAAe9G,cAK1BuG,EAAAhI,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDqH,EAAAhI,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAGjCiH,EAAAhI,UAAAwI,UAAA,WACJhJ,KAAKqB,OAAO4H,UACdjJ,KAAK4I,WAAY,EACb5I,KAAKqB,OAAOe,QAAUE,EAAAA,SAASC,aACjCvC,KAAK6I,YAAa,GAEpB7I,KAAKqB,OAAOK,UAIN8G,EAAAhI,UAAA0I,SAAA,SAASC,GACjB,GAAInJ,KAAK4I,UAAW,KACZQ,EAAa3E,KAAKC,IACtBD,KAAKE,IAAc,IAATwE,EAAgBnJ,KAAKM,KAAK+I,YAAa,MACjD,GAEFrJ,KAAKqB,OAAOgH,KAAKiB,QAAWF,EAAapJ,KAAKqB,OAAOgH,KAAKkB,MAAS,IACnEvJ,KAAKqB,OAAOmI,SAASJ,GAAY,KAI3BZ,EAAAhI,UAAAiJ,QAAA,SAAQN,GAEhB,GADAnJ,KAAK4I,WAAY,EACb5I,KAAKqB,OAAO4H,QAAS,KACjBG,EAAa3E,KAAKC,IACtBD,KAAKE,IAAc,IAATwE,EAAgBnJ,KAAKM,KAAK+I,YAAa,MACjD,GAEFrJ,KAAKqB,OAAOmI,SAASJ,GAAY,GAC7BpJ,KAAK6I,aACP7I,KAAK6I,YAAa,EAClB7I,KAAKqB,OAAOG,UAKRgH,EAAAhI,UAAAkJ,SAAA,WACR1J,KAAK4I,WAAY,EACb5I,KAAK6I,aACP7I,KAAK6I,YAAa,EAClB7I,KAAKqB,OAAOG,SAINgH,EAAAhI,UAAAmJ,eAAA,SAAe7F,GAGvB,QAFI8F,EAAa,EACbC,EAAe/F,EAAMzC,OAClBwI,GACLD,GAAcC,EAAQD,WACtBC,EAAUA,EAAQC,aAEpB,OAAOhG,EAAMiG,QAAQ,GAAGC,MAAQJ,GAIlCpB,EAAAhI,UAAAyJ,oBAAA,SAAoBC,GACdlK,KAAKqB,SACFrB,KAAKqB,OAAOkH,SACVvI,KAAK2I,SAGR3I,KAAKgJ,YAFLhJ,KAAKyJ,QAAQS,EAAOC,YAS5B3B,EAAAhI,UAAA4J,oBAAA,SAAoBF,GACdlK,KAAKqB,SACFrB,KAAKqB,OAAOkH,QAAUvI,KAAK2I,UAAY3I,KAAK4I,WAC/C5I,KAAKkJ,SAASgB,EAAOC,UAM3B3B,EAAAhI,UAAA6J,kBAAA,SAAkBH,GACZlK,KAAKqB,SACFrB,KAAKqB,OAAOkH,QAAUvI,KAAK2I,UAAY3I,KAAK4I,WAC/C5I,KAAKyJ,QAAQS,EAAOC,UAM1B3B,EAAAhI,UAAA8J,qBAAA,SAAqBJ,GACflK,KAAKqB,SACFrB,KAAKqB,OAAOkH,SACVvI,KAAK2I,SAGR3I,KAAKgJ,YAFLhJ,KAAKyJ,QAAQzJ,KAAK2J,eAAeO,OASzC1B,EAAAhI,UAAA+J,oBAAA,SAAoBL,GACdlK,KAAKqB,SACFrB,KAAKqB,OAAOkH,QAAUvI,KAAK2I,UAAY3I,KAAK4I,WAC/C5I,KAAKkJ,SAASlJ,KAAK2J,eAAeO,KAKU1B,EAAAhI,UAAAgK,sBAAA,SAChDC,GAEIzK,KAAKqB,SACFrB,KAAKqB,OAAOkH,QAAUvI,KAAK2I,UAAY3I,KAAK4I,WAC/C5I,KAAK0J,YAKoClB,EAAAhI,UAAAkK,mBAAA,SAC7CD,GAEIzK,KAAKqB,SACFrB,KAAKqB,OAAOkH,QAAUvI,KAAK2I,UAAY3I,KAAK4I,WAC/C5I,KAAK0J,YAMXlB,EAAAhI,UAAA8D,kBAAA,SAAkBR,GACZ9D,KAAKqB,SACe,KAAlByC,EAAMS,SAAoC,KAAlBT,EAAMS,SAChCT,EAAMU,iBACNxE,KAAKqB,OAAOmI,UAAUxJ,KAAKqB,OAAOgH,KAAKiB,QAAU,KAAQ,KAAM,IACpC,KAAlBxF,EAAMS,SAAoC,KAAlBT,EAAMS,UACvCT,EAAMU,iBACNxE,KAAKqB,OAAOmI,UAAUxJ,KAAKqB,OAAOgH,KAAKiB,QAAU,KAAQ,KAAM,MAKrEd,EAAAhI,UAAAmK,cAAA,WACE,OAAO3K,KAAKqB,OACRoD,KAAK2D,MAAkC,IAA3BpI,KAAKqB,OAAOgH,KAAKiB,QAAiBtJ,KAAKqB,OAAOgH,KAAKkB,OAAS,IACxE,MAGNf,EAAAhI,UAAAuI,eAAA,SAAe9G,GACbjC,KAAK0I,aAAezG,GAGtBuG,EAAAhI,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAxQvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,wVAgBR,+8CA9BFE,EAAAA,kBASgCD,EAAAA,oBAAzBE,EAAAA,iEA4ENC,EAAAA,YAAWT,KAAA,CAAC,6BAEZU,EAAAA,wBACAA,EAAAA,mCA0FA8B,EAAAA,aAAYxC,KAAA,CAAC,YAAa,CAAC,wCAa3BwC,EAAAA,aAAYxC,KAAA,CAAC,qBAAsB,CAAC,sCASpCwC,EAAAA,aAAYxC,KAAA,CAAC,mBAAoB,CAAC,yCASlCwC,EAAAA,aAAYxC,KAAA,CAAC,aAAc,CAAC,wCAa5BwC,EAAAA,aAAYxC,KAAA,CAAC,qBAAsB,CAAC,0CASpCwC,EAAAA,aAAYxC,KAAA,CAAC,uBAAwB,CAAC,uCAUtCwC,EAAAA,aAAYxC,KAAA,CAAC,oBAAqB,CAAC,sCAUnCwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BC5I1B,SAAA8H,EAAY9K,EAAwBD,GAAAG,KAAAH,IAAAA,EAX1BG,KAAA6K,gBAAgD,IAAIC,EAAAA,aAO9D9K,KAAAK,cAAgC,GAK9BL,KAAKM,KAAOR,EAAIS,qBAGlBqK,EAAApK,UAAAC,SAAA,aAEAmK,EAAApK,UAAAuK,YAAA,SAAYC,GACNA,EAAQC,SAASC,cAAgBF,EAAQC,SAASC,aAAaxL,QACjEM,KAAKiL,SAASvI,SAAO,SAClBoD,GACC,OAACA,EAAKI,MACJJ,EAAKI,OAASzB,KAAK2D,MAAMtC,EAAKqF,QAAU,KAAMC,eAKxDR,EAAApK,UAAA6K,cAAA,SAAcC,GACZtL,KAAKuL,gBAAkBvL,KAAKiL,SAASK,GACrCtL,KAAK6K,gBAAgBW,KAAKxL,KAAKiL,SAASK,KAG1CV,EAAApK,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAxHvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,qpBAuBR,iiDAvCFE,EAAAA,kBAWOD,EAAAA,kDAuFNI,EAAAA,+BAEAiI,EAAAA,2BCtCD,SAAAC,EACE5L,EACOD,EACA8L,GADA3L,KAAAH,IAAAA,EACAG,KAAA2L,IAAAA,EAPT3L,KAAAK,cAAgC,GAEhCL,KAAA2D,UAAY,EAOV3D,KAAKM,KAAOR,EAAIS,cAChBP,KAAK4L,eAAiB,CAAC,MAAO,MAAO,MAAO,OAC5C5L,KAAK6L,cAAgB,SAGvBH,EAAAlL,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDuK,EAAAlL,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAI3CmK,EAAAlL,UAAAqD,QAAA,WACE7D,KAAK8L,uBAIPJ,EAAAlL,UAAAuL,UAAA,SAAUjI,GAEc,KAAlBA,EAAMS,SAAoC,KAAlBT,EAAMS,UAChCT,EAAMU,iBACNxE,KAAK8L,wBAITJ,EAAAlL,UAAAsL,oBAAA,WACE9L,KAAK6L,gBAAkB7L,KAAK6L,cAAgB7L,KAAK4L,eAAelM,OAE5DM,KAAKqB,kBAAkB+B,EAAAA,aACzBpD,KAAKqB,OAAO2K,aAAehM,KAAK4L,eAAe5L,KAAK6L,eAEpD7L,KAAKqB,OAAO2K,aAAahM,KAAKuB,OAASvB,KAAK4L,eAC1C5L,KAAK6L,eAIT7L,KAAKiM,iBAGPP,EAAAlL,UAAA0L,gBAAA,WAEE,OADAlM,KAAK2D,UAAY3D,KAAKqB,OAASrB,KAAKqB,OAAO2K,aAAe,EACnDhM,KAAK2D,WAGd+H,EAAAlL,UAAAyL,cAAA,WACE,IACEjM,KAAK2L,IAAIM,gBACT,MAAOlN,GACPoN,QAAQC,KAAKrN,KAIjB2M,EAAAlL,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CArHvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,uMAUR,spBAvBFE,EAAAA,kBAQOD,EAAAA,oBAHPiJ,EAAAA,oDA4CC7I,EAAAA,8BAKAA,EAAAA,uBA+BA8B,EAAAA,aAAYxC,KAAA,CAAC,4BAKbwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BClC1B,SAAAwJ,EAAYxM,EAAwBD,GAAAG,KAAAH,IAAAA,EAJpCG,KAAAK,cAAgC,GAEhCL,KAAA2D,UAAYrB,EAAAA,SAASiK,UAGnBvM,KAAKM,KAAOR,EAAIS,qBAGlB+L,EAAA9L,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDmL,EAAA9L,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAI3C+K,EAAA9L,UAAAqD,QAAA,WACE7D,KAAKwM,aAIPF,EAAA9L,UAAAuL,UAAA,SAAUjI,GAEc,KAAlBA,EAAMS,SAAoC,KAAlBT,EAAMS,UAChCT,EAAMU,iBACNxE,KAAKwM,cAITF,EAAA9L,UAAAgM,UAAA,WAGE,OAFcxM,KAAKyM,YAGjB,KAAKnK,EAAAA,SAASC,WACZvC,KAAKqB,OAAOK,QACZ,MAEF,KAAKY,EAAAA,SAASiK,UACd,KAAKjK,EAAAA,SAASoK,SACZ1M,KAAKqB,OAAOG,SAKlB8K,EAAA9L,UAAAiM,SAAA,WAEE,OADAzM,KAAK2D,UAAY3D,KAAKqB,OAASrB,KAAKqB,OAAOe,MAAQE,EAAAA,SAASiK,UACrDvM,KAAK2D,WAGd2I,EAAA9L,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CApGvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,iWAYR,0hBAzBFE,EAAAA,kBAQOD,EAAAA,+CAwCNI,EAAAA,uBA2BA8B,EAAAA,aAAYxC,KAAA,CAAC,4BAKbwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BCtB1B,SAAA6J,EAAY7M,EAAwBD,GAAAG,KAAAH,IAAAA,EAJpCG,KAAAK,cAAgC,GAEhCL,KAAA2D,UAAY,UAGV3D,KAAKM,KAAOR,EAAIS,qBAGlBoM,EAAAnM,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDwL,EAAAnM,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,OACzCvB,KAAK4M,cAAgB5M,KAAKqB,OAAO8D,QAInCwH,EAAAnM,UAAAqD,QAAA,WACE7D,KAAK6M,mBAIPF,EAAAnM,UAAAuL,UAAA,SAAUjI,GAEc,KAAlBA,EAAMS,SAAoC,KAAlBT,EAAMS,UAChCT,EAAMU,iBACNxE,KAAK6M,oBAITF,EAAAnM,UAAAqM,gBAAA,eACQ1H,EAASnF,KAAK4D,YAEL,IAAXuB,GACyB,IAAvBnF,KAAKqB,OAAO8D,QAAuC,IAAvBnF,KAAK4M,gBACnC5M,KAAK4M,cAAgB,GAGvB5M,KAAKqB,OAAO8D,OAASnF,KAAK4M,gBAE1B5M,KAAK4M,cAAgBzH,EACrBnF,KAAKqB,OAAO8D,OAAS,IAIzBwH,EAAAnM,UAAAoD,UAAA,eACQuB,EAASnF,KAAKqB,OAASrB,KAAKqB,OAAO8D,OAAS,EAElD,OADAnF,KAAK2D,UAAYwB,EAAS,UAAY,QAC/BA,GAGTwH,EAAAnM,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAvGvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,sZAYR,8gBAxBFE,EAAAA,kBAOOD,EAAAA,+CAwCNI,EAAAA,uBA6BA8B,EAAAA,aAAYxC,KAAA,CAAC,4BAKbwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BC5B1B,SAAAgK,EACEhN,EACOD,EACAkN,GADA/M,KAAAH,IAAAA,EACAG,KAAA+M,MAAAA,EATT/M,KAAAgN,cAAe,EAEfhN,KAAAK,cAAgC,GAEhCL,KAAA2D,UAAY,cAOV3D,KAAKM,KAAOR,EAAIS,cAChBP,KAAKK,cAAchB,KACjBW,KAAK+M,MAAME,mBAAmBnM,UAC5Bd,KAAKiN,mBAAmBjM,KAAKhB,eAKnC8M,EAAAtM,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrD2L,EAAAtM,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAG3CuL,EAAAtM,UAAAyM,mBAAA,SAAmBC,GACjBlN,KAAK2D,UAAYuJ,EAAU,kBAAoB,cAC/ClN,KAAKgN,aAAeE,GAItBJ,EAAAtM,UAAAqD,QAAA,WACE7D,KAAKmN,yBAIPL,EAAAtM,UAAAuL,UAAA,SAAUjI,GAEc,KAAlBA,EAAMS,SAAoC,KAAlBT,EAAMS,UAChCT,EAAMU,iBACNxE,KAAKmN,0BAITL,EAAAtM,UAAA2M,sBAAA,eACMtD,EAAU7J,KAAKqB,OAEfrB,KAAKqB,kBAAkB+B,EAAAA,eACzByG,EAAU,MAGZ7J,KAAK+M,MAAMK,iBAAiBvD,IAG9BiD,EAAAtM,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAtGvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,iQAUR,0hBAtBFE,EAAAA,kBAOOD,EAAAA,oBAAciK,EAAAA,2DA+EpB/H,EAAAA,aAAYxC,KAAA,CAAC,4BAKbwC,EAAAA,aAAYxC,KAAA,CAAC,UAAW,CAAC,+BC9C1B,SAAAwK,EAAYxN,EAAwBD,GAAAG,KAAAH,IAAAA,EAFpCG,KAAAK,cAAgC,GAG9BL,KAAKM,KAAOR,EAAIS,qBAGlB+M,EAAA9M,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDmM,EAAA9M,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAG3C+L,EAAA9M,UAAA+M,cAAA,eACMC,EAAa,KAWjB,OATIxN,KAAKqB,QAAUrB,KAAKqB,OAAOoM,QAAUzN,KAAKqB,OAAOqM,SAAShO,SAE1D8N,EAD6B,IAA3BxN,KAAKqB,OAAOgH,KAAKkB,MACN,KAGVvJ,KAAKqB,OAAOoM,OAAOE,IAAM3N,KAAKqB,OAAOgH,KAAKkB,MAAS,IAAM,KAIzDiE,GAGTF,EAAA9M,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAtEvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,8BACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,yEAER,onBAbFE,EAAAA,kBAMOD,EAAAA,+CA+BNI,EAAAA,0BCwBD,SAAAoK,EAAY9N,EAAwBD,GAAAG,KAAAH,IAAAA,EAPpCG,KAAA6N,wBAAyB,EACzB7N,KAAA8N,UAAwB,GAExB9N,KAAAK,cAAgC,GAEhCL,KAAA+N,UAAY,EAGV/N,KAAKM,KAAOR,EAAIS,qBAGlBqN,EAAApN,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrDyM,EAAApN,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,WAEnCyM,EAAehO,KAAKqB,OAAOhB,cAAc4N,eAC/CjO,KAAKK,cAAchB,KACjB2O,EAAalN,UAAUd,KAAKkO,iBAAiBlN,KAAKhB,QAGhDA,KAAK6N,wBACP7N,KAAKkO,oBAITN,EAAApN,UAAA0N,iBAAA,WACE,GAAIlO,KAAKmO,YAAa,CAGpBnO,KAAK8N,UAAY,GAEjB,IAAK,IAAI9O,EAAI,EAAGoP,EAAIpO,KAAKmO,YAAYzO,OAAQV,EAAIoP,EAAGpP,IAAK,KAKjDqP,EAA2D,MAH/DrO,KAAKmO,YAAYnP,GAAGsP,SAAW,EAC3BtO,KAAKmO,YAAYnP,GAAGsP,QACpBtO,KAAKmO,YAAYnP,GAAGuP,UAAY,GACNvO,KAAKmO,YAAYnP,GAAGuP,WAChDC,EAAW,IACXC,EAAe,IAEa,iBAArBJ,GAAiCrO,KAAKqB,OAAOgH,KAAKkB,QAC3DkF,EACsB,IAAnBJ,EAA0BrO,KAAKqB,OAAOgH,KAAKkB,MAAQ,IACtDiF,EACmC,IAAhCxO,KAAKmO,YAAYnP,GAAGuP,UACnB9J,KAAK2D,MAAMpI,KAAKqB,OAAOgH,KAAKkB,MAAQ,KACtC,KAGHvJ,KAAKmO,YAAYnP,GAAW0P,QAAU,CACrCzJ,MAAOwJ,EACPzJ,KAAMwJ,GAGRxO,KAAK8N,UAAUzO,KAAKW,KAAKmO,YAAYnP,OAK3C4O,EAAApN,UAAAmO,gBAAA,WACO3O,KAAKqB,OAIVrB,KAAKkO,mBAHHlO,KAAK6N,wBAAyB,GAMlCD,EAAApN,UAAAuK,YAAA,SAAYC,GACNA,EAAQmD,YAAYjD,cACtBlL,KAAK2O,mBAITf,EAAApN,UAAAoO,UAAA,WACM5O,KAAKmO,cACSnO,KAAK+N,YAAc/N,KAAKmO,YAAYzO,SAGlDM,KAAK+N,UAAY/N,KAAKmO,YAAYzO,OAClCM,KAAK2O,qBAKXf,EAAApN,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CAvIvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,0BACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,oPAWR,mgBA5BFE,EAAAA,kBAUOD,EAAAA,qDAwCNI,EAAAA,qBACAA,EAAAA,0BCSD,SAAAqL,EAAY/O,EAAwBD,GAAAG,KAAAH,IAAAA,EAP3BG,KAAA2I,UAAW,EAKpB3I,KAAAK,cAAgC,GAG9BL,KAAKM,KAAOR,EAAIS,qBAGlBsO,EAAArO,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKH,IAAIqB,cACXlB,KAAKmB,gBAELnB,KAAKK,cAAchB,KACjBW,KAAKH,IAAIuB,iBAAiBN,WAAS,WAAO,OAAAJ,EAAKS,qBAKrD0N,EAAArO,UAAAW,cAAA,WACEnB,KAAKqB,OAASrB,KAAKH,IAAIyB,aAAatB,KAAKuB,QAG3CsN,EAAArO,UAAAmK,cAAA,WACE,OAAO3K,KAAKqB,OACRoD,KAAK2D,MAAkC,IAA3BpI,KAAKqB,OAAOgH,KAAKiB,QAAiBtJ,KAAKqB,OAAOgH,KAAKkB,OAC7D,IACF,MAGNsF,EAAArO,UAAAiC,YAAA,WACEzC,KAAKK,cAAcqC,SAAO,SAAEC,GAAM,OAAAA,EAAEC,2CA7EvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,SAAU,4HAGR,09BAdFE,EAAAA,kBAMOD,EAAAA,+CA6CNI,EAAAA,wBACAA,EAAAA,aCtCGsL,EAAa,CACjBlP,EACA6D,EACA8B,EACAwC,EACAS,EACAoC,EACAc,EACAY,EACAK,EACAG,EACA9F,EACAsG,EACAM,EACAiB,KAQF,iCALCE,EAAAA,SAAQjM,KAAA,CAAC,CACRkM,QAAS,CAACC,EAAAA,aAAcC,EAAAA,cACxBC,aAAY3P,EAAMsP,GAClBM,QAAO5P,EAAMsP","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { fromEvent } from 'rxjs';\nimport { VgApiService, VgControlsHiddenService, VgStates } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-controls',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [\n    `\n      vg-controls {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: 50px;\n        z-index: 300;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.5);\n        -webkit-transition: bottom 1s;\n        -khtml-transition: bottom 1s;\n        -moz-transition: bottom 1s;\n        -ms-transition: bottom 1s;\n        transition: bottom 1s;\n      }\n      vg-controls.hide {\n        bottom: -50px;\n      }\n    `,\n  ],\n})\nexport class VgControlsComponent implements OnInit, AfterViewInit, OnDestroy {\n  elem: HTMLElement;\n  target: any;\n\n  @HostBinding('style.pointer-events') isAdsPlaying = 'initial';\n  @HostBinding('class.hide') hideControls = false;\n\n  @Input() vgFor: string;\n  @Input() vgAutohide = false;\n  @Input() vgAutohideTime = 3;\n\n  private timer: any;\n\n  mouseMove$: Observable<any>;\n  touchStart$: Observable<any>;\n\n  subscriptions: Subscription[] = [];\n  // @ts-ignore\n  constructor(\n    private API: VgApiService,\n    ref: ElementRef,\n    private hidden: VgControlsHiddenService\n  ) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n    this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n\n    this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n    this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(\n      this.target.subscriptions.play.subscribe(this.onPlay.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.pause.subscribe(this.onPause.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this))\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.vgAutohide) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  onPlay() {\n    if (this.vgAutohide) {\n      this.hide();\n    }\n  }\n\n  onPause() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n  }\n\n  onStartAds() {\n    this.isAdsPlaying = 'none';\n  }\n\n  onEndAds() {\n    this.isAdsPlaying = 'initial';\n  }\n\n  hide() {\n    if (this.vgAutohide) {\n      clearTimeout(this.timer);\n      this.hideAsync();\n    }\n  }\n\n  show() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n\n    if (this.vgAutohide) {\n      this.hideAsync();\n    }\n  }\n\n  private hideAsync() {\n    if (this.API.state === VgStates.VG_PLAYING) {\n      this.timer = setTimeout(() => {\n        this.hideControls = true;\n        this.hidden.state(true);\n      }, this.vgAutohideTime * 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-volume',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div\n      #volumeBar\n      class=\"volumeBar\"\n      tabindex=\"0\"\n      role=\"slider\"\n      aria-label=\"volume level\"\n      aria-level=\"polite\"\n      [attr.aria-valuenow]=\"ariaValue\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      aria-orientation=\"horizontal\"\n      [attr.aria-valuetext]=\"ariaValue + '%'\"\n      (click)=\"onClick($event)\"\n      (mousedown)=\"onMouseDown($event)\"\n    >\n      <div class=\"volumeBackground\" [ngClass]=\"{ dragging: isDragging }\">\n        <div\n          class=\"volumeValue\"\n          [style.width]=\"getVolume() * (100 - 15) + '%'\"\n        ></div>\n        <div\n          class=\"volumeKnob\"\n          [style.left]=\"getVolume() * (100 - 15) + '%'\"\n        ></div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      vg-volume {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 100px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-volume .volumeBar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n      }\n      vg-volume .volumeBackground {\n        display: flex;\n        flex-grow: 1;\n        height: 5px;\n        pointer-events: none;\n        background-color: #333;\n      }\n      vg-volume .volumeValue {\n        display: flex;\n        height: 5px;\n        pointer-events: none;\n        background-color: #fff;\n        transition: all 0.2s ease-out;\n      }\n      vg-volume .volumeKnob {\n        position: absolute;\n        width: 15px;\n        height: 15px;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 15px;\n        pointer-events: none;\n        background-color: #fff;\n        transition: all 0.2s ease-out;\n      }\n      vg-volume .volumeBackground.dragging .volumeValue,\n      vg-volume .volumeBackground.dragging .volumeKnob {\n        transition: none;\n      }\n    `,\n  ],\n})\nexport class VgVolumeComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @ViewChild('volumeBar', { static: true })\n  volumeBarRef: ElementRef;\n\n  elem: HTMLElement;\n  target: any;\n  isDragging: boolean;\n  mouseDownPosX: number;\n  ariaValue: number;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n    this.isDragging = false;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.ariaValue = this.getVolume() * 100;\n  }\n\n  onClick(event: { clientX: number }) {\n    this.setVolume(this.calculateVolume(event.clientX));\n  }\n\n  onMouseDown(event: { clientX: number }) {\n    this.mouseDownPosX = event.clientX;\n    this.isDragging = true;\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.setVolume(this.calculateVolume(event.clientX));\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onStopDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.isDragging = false;\n      if (this.mouseDownPosX === event.clientX) {\n        this.setVolume(this.calculateVolume(event.clientX));\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (event.keyCode === 38 || event.keyCode === 39) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n    } else if (event.keyCode === 37 || event.keyCode === 40) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n    }\n  }\n\n  calculateVolume(mousePosX: number) {\n    const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n    const volumeBarOffsetLeft: number = recObj.left;\n    const volumeBarWidth: number = recObj.width;\n    return ((mousePosX - volumeBarOffsetLeft) / volumeBarWidth) * 100;\n  }\n\n  setVolume(vol: number) {\n    this.target.volume = Math.max(0, Math.min(1, vol / 100));\n    this.ariaValue = this.target.volume * 100;\n  }\n\n  getVolume(): number {\n    return this.target ? this.target.volume : 0;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\nexport interface Option {\n  id: string;\n  label: string;\n  selected: boolean;\n}\n\n@Component({\n  selector: 'vg-track-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"container\">\n      <div\n        class=\"track-selected\"\n        [class.vg-icon-closed_caption]=\"!trackSelected\"\n      >\n        {{ trackSelected || '' }}\n      </div>\n      <select\n        class=\"trackSelector\"\n        (change)=\"selectTrack($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"track selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let track of tracks\"\n          [value]=\"track.id\"\n          [selected]=\"track.selected === true\"\n        >\n          {{ track.label }}\n        </option>\n      </select>\n    </div>\n  `,\n  styles: [\n    `\n      vg-track-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-track-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-track-selector select.trackSelector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-track-selector select.trackSelector::-ms-expand {\n        display: none;\n      }\n      vg-track-selector select.trackSelector option {\n        color: #000;\n      }\n      vg-track-selector .track-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-track-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport class VgTrackSelectorComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  tracks: Array<Option>;\n  trackSelected: string;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const subs: Array<Option> = Array.from(\n      (this.API.getMasterMedia().elem as HTMLMediaElement).children\n    )\n      .filter((item: HTMLElement) => item.tagName === 'TRACK')\n      .filter((item: HTMLTrackElement) => item.kind === 'subtitles')\n      .map((item: HTMLTrackElement) => ({\n        label: item.label,\n        selected: item.default === true,\n        id: item.srclang,\n      }));\n\n    this.tracks = [\n      ...subs,\n      {\n        id: null,\n        label: 'Off',\n        selected: subs.every((item: Option) => item.selected === false),\n      },\n    ];\n\n    const track: Option = this.tracks.filter(\n      (item: Option) => item.selected === true\n    )[0];\n    this.trackSelected = track.id;\n    this.ariaValue = track.label;\n  }\n\n  selectTrack(trackId: string) {\n    this.trackSelected = trackId === 'null' ? null : trackId;\n\n    this.ariaValue = 'No track selected';\n\n    Array.from(\n      (this.API.getMasterMedia().elem as HTMLMediaElement).textTracks\n    ).forEach((item: TextTrack) => {\n      if (item.language === trackId) {\n        this.ariaValue = item.label;\n        item.mode = 'showing';\n      } else {\n        item.mode = 'hidden';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n// Workaround until we can use UTC with Angular Date Pipe\n@Pipe({ name: 'vgUtc' })\nexport class VgUtcPipe implements PipeTransform {\n  transform(value: number, format: string): string {\n    let date = new Date(value);\n    let result = format;\n    let ss: string | number = date.getUTCSeconds();\n    let mm: string | number = date.getUTCMinutes();\n    let hh: string | number = date.getUTCHours();\n\n    if (ss < 10) {\n      ss = '0' + ss;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n    if (hh < 10) {\n      hh = '0' + hh;\n    }\n\n    result = result.replace(/ss/g, <string>ss);\n    result = result.replace(/mm/g, <string>mm);\n    result = result.replace(/hh/g, <string>hh);\n\n    return result;\n  }\n}\n\n@Component({\n  selector: 'vg-time-display',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span *ngIf=\"target?.isLive\">LIVE</span>\n    <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc: vgFormat }}</span>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      vg-time-display {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 60px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n        pointer-events: none;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n      }\n    `,\n  ],\n})\nexport class VgTimeDisplayComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgProperty = 'current';\n  @Input() vgFormat = 'mm:ss';\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getTime() {\n    let t = 0;\n\n    if (this.target) {\n      t = Math.round(this.target.time[this.vgProperty]);\n      t = isNaN(t) || this.target.isLive ? 0 : t;\n    }\n\n    return t;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  HostBinding,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgControlsHiddenService, VgApiService, VgStates } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-scrub-bar',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div\n      class=\"scrubBar\"\n      tabindex=\"0\"\n      role=\"slider\"\n      aria-label=\"scrub bar\"\n      aria-level=\"polite\"\n      [attr.aria-valuenow]=\"getPercentage()\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [attr.aria-valuetext]=\"getPercentage()\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [\n    `\n      vg-scrub-bar {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        position: absolute;\n        width: 100%;\n        height: 5px;\n        bottom: 50px;\n        margin: 0;\n        cursor: pointer;\n        align-items: center;\n        background: rgba(0, 0, 0, 0.75);\n        z-index: 250;\n        -webkit-transition: bottom 1s, opacity 0.5s;\n        -khtml-transition: bottom 1s, opacity 0.5s;\n        -moz-transition: bottom 1s, opacity 0.5s;\n        -ms-transition: bottom 1s, opacity 0.5s;\n        transition: bottom 1s, opacity 0.5s;\n      }\n      vg-scrub-bar .scrubBar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        height: 100%;\n      }\n      vg-controls vg-scrub-bar {\n        position: relative;\n        bottom: 0;\n        background: transparent;\n        height: 50px;\n        flex-grow: 1;\n        flex-basis: 0;\n        margin: 0 10px;\n        -webkit-transition: initial;\n        -khtml-transition: initial;\n        -moz-transition: initial;\n        -ms-transition: initial;\n        transition: initial;\n      }\n      vg-scrub-bar.hide {\n        bottom: 0;\n        opacity: 0;\n      }\n      vg-controls vg-scrub-bar.hide {\n        bottom: initial;\n        opacity: initial;\n      }\n    `,\n  ],\n})\nexport class VgScrubBarComponent implements OnInit, OnDestroy {\n  @HostBinding('class.hide') hideScrubBar = false;\n\n  @Input() vgFor: string;\n  @Input() vgSlider = true;\n\n  elem: HTMLElement;\n  target: any;\n  isSeeking = false;\n  wasPlaying = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    ref: ElementRef,\n    public API: VgApiService,\n    vgControlsHiddenState: VgControlsHiddenService\n  ) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(\n      vgControlsHiddenState.isHidden.subscribe((hide) =>\n        this.onHideScrubBar(hide)\n      )\n    );\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  protected seekStart() {\n    if (this.target.canPlay) {\n      this.isSeeking = true;\n      if (this.target.state === VgStates.VG_PLAYING) {\n        this.wasPlaying = true;\n      }\n      this.target.pause();\n    }\n  }\n\n  protected seekMove(offset: number) {\n    if (this.isSeeking) {\n      const percentage = Math.max(\n        Math.min((offset * 100) / this.elem.scrollWidth, 99.9),\n        0\n      );\n      this.target.time.current = (percentage * this.target.time.total) / 100;\n      this.target.seekTime(percentage, true);\n    }\n  }\n\n  protected seekEnd(offset: number) {\n    this.isSeeking = false;\n    if (this.target.canPlay) {\n      const percentage = Math.max(\n        Math.min((offset * 100) / this.elem.scrollWidth, 99.9),\n        0\n      );\n      this.target.seekTime(percentage, true);\n      if (this.wasPlaying) {\n        this.wasPlaying = false;\n        this.target.play();\n      }\n    }\n  }\n\n  protected touchEnd() {\n    this.isSeeking = false;\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.target.play();\n    }\n  }\n\n  protected getTouchOffset(event: any) {\n    let offsetLeft = 0;\n    let element: any = event.target;\n    while (element) {\n      offsetLeft += element.offsetLeft;\n      element = element.offsetParent;\n    }\n    return event.touches[0].pageX - offsetLeft;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDownScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd($event.offsetX);\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUpScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekEnd($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('touchstart', ['$event'])\n  onTouchStartScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd(this.getTouchOffset($event));\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:touchmove', ['$event'])\n  onTouchMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove(this.getTouchOffset($event));\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchcancel', ['$event']) onTouchCancelScrubBar(\n    _$event: any\n  ) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchend', ['$event']) onTouchEndScrubBar(\n    _$event: any\n  ) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (this.target) {\n      if (event.keyCode === 38 || event.keyCode === 39) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n      } else if (event.keyCode === 37 || event.keyCode === 40) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n      }\n    }\n  }\n\n  getPercentage() {\n    return this.target\n      ? Math.round((this.target.time.current * 100) / this.target.time.total) + '%'\n      : '0%';\n  }\n\n  onHideScrubBar(hide: boolean) {\n    this.hideScrubBar = hide;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService, BitrateOptions } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-quality-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"container\">\n      <div class=\"quality-selected\" [class.vg-icon-hd]=\"!bitrateSelected\">\n        {{ bitrateSelected?.label }}\n      </div>\n      <select\n        class=\"quality-selector\"\n        (change)=\"selectBitrate($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"quality selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let bitrate of bitrates\"\n          [value]=\"bitrate.qualityIndex\"\n          [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\"\n        >\n          {{ bitrate.label }}\n        </option>\n      </select>\n    </div>\n  `,\n  styles: [\n    `\n      vg-quality-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-quality-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-quality-selector select.quality-selector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-quality-selector select.quality-selector::-ms-expand {\n        display: none;\n      }\n      vg-quality-selector select.quality-selector option {\n        color: #000;\n      }\n      vg-quality-selector .quality-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-quality-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport class VgQualitySelectorComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @Input() bitrates: BitrateOptions[];\n\n  @Output() onBitrateChange: EventEmitter<BitrateOptions> = new EventEmitter();\n\n  bitrateSelected: BitrateOptions;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.bitrates.currentValue && changes.bitrates.currentValue.length) {\n      this.bitrates.forEach(\n        (item) =>\n          (item.label =\n            item.label || Math.round(item.bitrate / 1000).toString())\n      );\n    }\n  }\n\n  selectBitrate(index: number) {\n    this.bitrateSelected = this.bitrates[index];\n    this.onBitrateChange.emit(this.bitrates[index]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-playback-button',\n  encapsulation: ViewEncapsulation.None,\n  template: ` <span\n    class=\"button\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"playback speed button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  >\n    {{ getPlaybackRate() }}x\n  </span>`,\n  styles: [\n    `\n      vg-playback-button {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n      }\n      vg-playback-button .button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 50px;\n      }\n    `,\n  ],\n})\nexport class VgPlaybackButtonComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  @Input() playbackValues: Array<string>;\n  playbackIndex: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 1;\n\n  constructor(\n    ref: ElementRef,\n    public API: VgApiService,\n    public cdr: ChangeDetectorRef\n  ) {\n    this.elem = ref.nativeElement;\n    this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n    this.playbackIndex = 1;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.updatePlaybackSpeed();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.updatePlaybackSpeed();\n    }\n  }\n\n  updatePlaybackSpeed() {\n    this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n\n    if (this.target instanceof VgApiService) {\n      this.target.playbackRate = this.playbackValues[this.playbackIndex];\n    } else {\n      this.target.playbackRate[this.vgFor] = this.playbackValues[\n        this.playbackIndex\n      ];\n    }\n\n    this.detectChanges();\n  }\n\n  getPlaybackRate() {\n    this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n    return this.ariaValue;\n  }\n\n  detectChanges() {\n    try {\n      this.cdr.detectChanges();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService, VgStates } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-play-pause',\n  encapsulation: ViewEncapsulation.None,\n  template: ` <div\n    class=\"icon\"\n    [class.vg-icon-pause]=\"getState() === 'playing'\"\n    [class.vg-icon-play_arrow]=\"\n      getState() === 'paused' || getState() === 'ended'\n    \"\n    tabindex=\"0\"\n    role=\"button\"\n    [attr.aria-label]=\"getState() === 'paused' ? 'play' : 'pause'\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n  styles: [\n    `\n      vg-play-pause {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-play-pause .icon {\n        pointer-events: none;\n      }\n    `,\n  ],\n})\nexport class VgPlayPauseComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = VgStates.VG_PAUSED;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.playPause();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.playPause();\n    }\n  }\n\n  playPause() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-mute',\n  encapsulation: ViewEncapsulation.None,\n  template: ` <div\n    class=\"icon\"\n    [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n    [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n    [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n    [class.vg-icon-volume_off]=\"getVolume() === 0\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"mute button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n  styles: [\n    `\n      vg-mute {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-mute .icon {\n        pointer-events: none;\n      }\n    `,\n  ],\n})\nexport class VgMuteComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  elem: HTMLElement;\n  target: any;\n\n  currentVolume: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'unmuted';\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.currentVolume = this.target.volume;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeMuteState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeMuteState();\n    }\n  }\n\n  changeMuteState() {\n    const volume = this.getVolume();\n\n    if (volume === 0) {\n      if (this.target.volume === 0 && this.currentVolume === 0) {\n        this.currentVolume = 1;\n      }\n\n      this.target.volume = this.currentVolume;\n    } else {\n      this.currentVolume = volume;\n      this.target.volume = 0;\n    }\n  }\n\n  getVolume() {\n    const volume = this.target ? this.target.volume : 0;\n    this.ariaValue = volume ? 'unmuted' : 'muted';\n    return volume;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService, VgFullscreenApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-fullscreen',\n  encapsulation: ViewEncapsulation.None,\n  template: ` <div\n    class=\"icon\"\n    [class.vg-icon-fullscreen]=\"!isFullscreen\"\n    [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"fullscreen button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n  styles: [\n    `\n      vg-fullscreen {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-fullscreen .icon {\n        pointer-events: none;\n      }\n    `,\n  ],\n})\nexport class VgFullscreenComponent implements OnInit, OnDestroy {\n  elem: HTMLElement;\n  vgFor: string;\n  target: Object;\n  isFullscreen = false;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'normal mode';\n\n  constructor(\n    ref: ElementRef,\n    public API: VgApiService,\n    public fsAPI: VgFullscreenApiService\n  ) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(\n      this.fsAPI.onChangeFullscreen.subscribe(\n        this.onChangeFullscreen.bind(this)\n      )\n    );\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    this.ariaValue = fsState ? 'fullscreen mode' : 'normal mode';\n    this.isFullscreen = fsState;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeFullscreenState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeFullscreenState();\n    }\n  }\n\n  changeFullscreenState() {\n    let element = this.target;\n\n    if (this.target instanceof VgApiService) {\n      element = null;\n    }\n\n    this.fsAPI.toggleFullscreen(element);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-scrub-bar-buffering-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n  styles: [\n    `\n      vg-scrub-bar-buffering-time {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-buffering-time .background {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n      vg-controls vg-scrub-bar-buffering-time {\n        position: absolute;\n        top: calc(50% - 3px);\n      }\n      vg-controls vg-scrub-bar-buffering-time .background {\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n    `,\n  ],\n})\nexport class VgScrubBarBufferingTimeComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getBufferTime() {\n    let bufferTime = '0%';\n\n    if (this.target && this.target.buffer && this.target.buffered.length) {\n      if (this.target.time.total === 0) {\n        bufferTime = '0%';\n      } else {\n        bufferTime =\n          (this.target.buffer.end / this.target.time.total) * 100 + '%';\n      }\n    }\n\n    return bufferTime;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  DoCheck,\n  SimpleChange,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n\n// tslint:disable-next-line: no-conflicting-lifecycle\n@Component({\n  selector: 'vg-scrub-bar-cue-points',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"cue-point-container\">\n      <span\n        *ngFor=\"let cp of cuePoints\"\n        [style.width]=\"cp.$$style?.width\"\n        [style.left]=\"cp.$$style?.left\"\n        class=\"cue-point\"\n      ></span>\n    </div>\n  `,\n  styles: [\n    `\n      vg-scrub-bar-cue-points {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-cue-points .cue-point-container .cue-point {\n        position: absolute;\n        height: 5px;\n        background-color: rgba(255, 204, 0, 0.7);\n      }\n      vg-controls vg-scrub-bar-cue-points {\n        position: absolute;\n        top: calc(50% - 3px);\n      }\n    `,\n  ],\n})\nexport class VgScrubBarCuePointsComponent\n  implements OnInit, OnChanges, OnDestroy, DoCheck {\n  @Input() vgCuePoints: TextTrackCueList;\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  onLoadedMetadataCalled = false;\n  cuePoints: Array<any> = [];\n\n  subscriptions: Subscription[] = [];\n\n  totalCues = 0;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n    this.subscriptions.push(\n      onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this))\n    );\n\n    if (this.onLoadedMetadataCalled) {\n      this.onLoadedMetadata();\n    }\n  }\n\n  onLoadedMetadata() {\n    if (this.vgCuePoints) {\n      // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n      // See: https://github.com/videogular/videogular2/issues/369\n      this.cuePoints = [];\n\n      for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n        const end =\n          this.vgCuePoints[i].endTime >= 0\n            ? this.vgCuePoints[i].endTime\n            : this.vgCuePoints[i].startTime + 1;\n        const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n        let position = '0';\n        let percentWidth = '0';\n\n        if (typeof cuePointDuration === 'number' && this.target.time.total) {\n          percentWidth =\n            (cuePointDuration * 100) / this.target.time.total + '%';\n          position =\n            (this.vgCuePoints[i].startTime * 100) /\n              Math.round(this.target.time.total / 1000) +\n            '%';\n        }\n\n        (this.vgCuePoints[i] as any).$$style = {\n          width: percentWidth,\n          left: position,\n        };\n\n        this.cuePoints.push(this.vgCuePoints[i]);\n      }\n    }\n  }\n\n  updateCuePoints() {\n    if (!this.target) {\n      this.onLoadedMetadataCalled = true;\n      return;\n    }\n    this.onLoadedMetadata();\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    if (changes.vgCuePoints.currentValue) {\n      this.updateCuePoints();\n    }\n  }\n\n  ngDoCheck() {\n    if (this.vgCuePoints) {\n      const changes = this.totalCues !== this.vgCuePoints.length;\n\n      if (changes) {\n        this.totalCues = this.vgCuePoints.length;\n        this.updateCuePoints();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-scrub-bar-current-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div>\n    <span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n  styles: [\n    `\n      vg-scrub-bar-current-time {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-current-time .background {\n        background-color: white;\n      }\n      vg-controls vg-scrub-bar-current-time {\n        position: absolute;\n        top: calc(50% - 3px);\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n      vg-controls vg-scrub-bar-current-time .background {\n        border: 1px solid white;\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n      vg-scrub-bar-current-time .slider {\n        background: white;\n        height: 15px;\n        width: 15px;\n        border-radius: 50%;\n        box-shadow: 0px 0px 10px black;\n        margin-top: -5px;\n        margin-left: -10px;\n      }\n    `,\n  ],\n})\nexport class VgScrubBarCurrentTimeComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgSlider = false;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getPercentage() {\n    return this.target\n      ? Math.round((this.target.time.current * 100) / this.target.time.total) +\n          '%'\n      : '0%';\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgControlsComponent } from './components/vg-controls/vg-controls.component';\nimport { VgVolumeComponent } from './components/vg-volume/vg-volume.component';\nimport { VgTrackSelectorComponent } from './components/vg-track-selector/vg-track-selector.component';\nimport { VgTimeDisplayComponent, VgUtcPipe } from './components/vg-time-display/vg-time-display.component';\nimport { VgScrubBarComponent } from './components/vg-scrub-bar/vg-scrub-bar.component';\nimport { VgQualitySelectorComponent } from './components/vg-quality-selector/vg-quality-selector.component';\nimport { VgPlaybackButtonComponent } from './components/vg-playback-button/vg-playback-button.component';\nimport { VgPlayPauseComponent } from './components/vg-play-pause/vg-play-pause.component';\nimport { VgMuteComponent } from './components/vg-mute/vg-mute.component';\nimport { VgFullscreenComponent } from './components/vg-fullscreen/vg-fullscreen.component';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\nimport { VgScrubBarBufferingTimeComponent } from './components/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.component';\nimport { VgScrubBarCuePointsComponent } from './components/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.component';\nimport { VgScrubBarCurrentTimeComponent } from './components/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.component';\n\nconst components = [\n  VgControlsComponent,\n  VgVolumeComponent,\n  VgTrackSelectorComponent,\n  VgTimeDisplayComponent,\n  VgScrubBarComponent,\n  VgQualitySelectorComponent,\n  VgPlaybackButtonComponent,\n  VgPlayPauseComponent,\n  VgMuteComponent,\n  VgFullscreenComponent,\n  VgUtcPipe,\n  VgScrubBarBufferingTimeComponent,\n  VgScrubBarCuePointsComponent,\n  VgScrubBarCurrentTimeComponent\n]\n\n@NgModule({\n  imports: [CommonModule, VgCoreModule],\n  declarations: [...components],\n  exports: [...components],\n})\nexport class VgControlsModule {}\n"]}