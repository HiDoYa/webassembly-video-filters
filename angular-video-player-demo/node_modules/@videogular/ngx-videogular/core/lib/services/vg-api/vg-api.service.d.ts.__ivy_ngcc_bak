import { EventEmitter } from '@angular/core';
import { VgFullscreenApiService } from '../vg-fullscreen-api/vg-fullscreen-api.service';
import { IPlayable } from '../../interfaces/vg-media-api.interface';
export declare class VgApiService {
    medias: {};
    videogularElement: any;
    playerReadyEvent: EventEmitter<VgApiService>;
    isPlayerReady: boolean;
    fsAPI: VgFullscreenApiService;
    constructor();
    onPlayerReady(fsAPI: VgFullscreenApiService): void;
    getDefaultMedia(): IPlayable;
    getMasterMedia(): IPlayable;
    isMasterDefined(): boolean;
    getMediaById(id?: string): IPlayable;
    play(): void;
    pause(): void;
    get duration(): any;
    set currentTime(seconds: any);
    get currentTime(): any;
    set state(state: any);
    get state(): any;
    set volume(volume: any);
    get volume(): any;
    set playbackRate(rate: any);
    get playbackRate(): any;
    get canPlay(): any;
    get canPlayThrough(): any;
    get isMetadataLoaded(): any;
    get isWaiting(): any;
    get isCompleted(): any;
    get isLive(): any;
    get isMaster(): any;
    get time(): any;
    get buffer(): any;
    get buffered(): any;
    get subscriptions(): any;
    get textTracks(): any;
    seekTime(value: number, byPercent?: boolean): void;
    $$seek(media: IPlayable, value: number, byPercent?: boolean): void;
    addTextTrack(type: string, label?: string, language?: string): void;
    $$addTextTrack(media: IPlayable, type: string, label?: string, language?: string): void;
    $$getAllProperties(property: string): any;
    $$setAllProperties(property: string, value: any): void;
    registerElement(elem: HTMLElement): void;
    registerMedia(media: IPlayable): void;
    unregisterMedia(media: IPlayable): void;
}
