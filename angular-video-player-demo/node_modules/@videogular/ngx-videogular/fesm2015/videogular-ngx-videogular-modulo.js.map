{"version":3,"file":"videogular-ngx-videogular-modulo.js","sources":["../../libs/ngx-videogular/modulo/src/lib/utils/modulo.ts","../../libs/ngx-videogular/modulo/src/lib/components/vg-modulo.component.ts","../modulo/src/lib/modulo.module.ts","../../libs/ngx-videogular/modulo/src/lib/interfaces/fluctus.interface.ts","../../libs/ngx-videogular/modulo/src/lib/interfaces/modulo-config.interface.ts"],"sourcesContent":["import {FluctusInterface} from '../interfaces/fluctus.interface';\n\nconst AudioContext = window[\"AudioContext\"] || window[\"webkitAudioContext\"];\n\nexport class Gondolo implements FluctusInterface {\n  ctx: AudioContext;\n  analyser: AnalyserNode | Array<AnalyserNode>;\n  stereo: boolean;\n  audible: boolean;\n  wavedata: Uint8Array | null;\n  freqdata: any;\n  splitter: ChannelSplitterNode | null;\n  merger: ChannelMergerNode | null;\n  source: MediaElementAudioSourceNode | MediaStreamAudioSourceNode;\n  output: ChannelMergerNode;\n\n  constructor(\n    audio:\n      | HTMLAudioElement\n      | AudioNode\n      | MediaStream\n      | MediaElementAudioSourceNode\n      | MediaStreamAudioSourceNode,\n    ctx?: AudioContext | any,\n    opts?: { stereo?: boolean; audible?: boolean }\n  ) {\n    if (!(this instanceof Gondolo)) {\n      return new Gondolo(audio, ctx, opts);\n    }\n\n    if (!(ctx instanceof AudioContext)) {\n      (opts = ctx), (ctx = null);\n    }\n\n    opts = opts || {};\n    this.ctx = ctx = ctx || new AudioContext();\n\n    if (!(audio instanceof AudioNode)) {\n      audio =\n        audio instanceof Audio || audio instanceof HTMLAudioElement\n          ? ctx.createMediaElementSource(audio)\n          : ctx.createMediaStreamSource(audio);\n    }\n\n    this.audioConfigStateResolver(ctx, opts, audio);\n    this.audioConfigStateParser(ctx);\n  }\n\n  public waveform(output?: Uint8Array, channel?: number): Uint8Array {\n    if (!output) {\n      output =\n        this.wavedata ||\n        (this.wavedata = new Uint8Array(\n          (this.analyser[0] || this.analyser).frequencyBinCount\n        ));\n    }\n\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n\n    analyser.getByteTimeDomainData(output);\n\n    return output;\n  }\n\n  public frequencies(output?: Uint8Array, channel?: number): Uint8Array {\n    if (!output) {\n      output =\n        this.freqdata ||\n        (this.freqdata = new Uint8Array(\n          (this.analyser[0] || this.analyser).frequencyBinCount\n        ));\n    }\n\n    const analyser = this.stereo ? this.analyser[channel || 0] : this.analyser;\n\n    analyser.getByteFrequencyData(output);\n\n    return output;\n  }\n\n  private audioConfigStateResolver(\n    ctx: AudioContext,\n    opts: { stereo?: boolean; audible?: boolean },\n    audio: MediaElementAudioSourceNode | any\n  ): void {\n    this.analyser = ctx.createAnalyser();\n    this.stereo = !!opts.stereo;\n    this.audible = opts.audible !== false;\n    this.wavedata = null;\n    this.freqdata = null;\n    this.splitter = null;\n    this.merger = null;\n    this.source = audio;\n  }\n\n  private audioConfigStateParser(ctx: AudioContext) {\n    if (!this.stereo) {\n      this.output = this.source;\n\n      this.source.connect(this.analyser[0] || this.analyser);\n\n      if (this.audible) {\n        (this.analyser[0] || this.analyser).connect(ctx.destination);\n      }\n    } else {\n      this.analyser = [this.analyser[0] || this.analyser];\n\n      this.analyser.push(ctx.createAnalyser());\n\n      this.splitter = ctx.createChannelSplitter(2);\n      this.merger = ctx.createChannelMerger(2);\n      this.output = this.merger;\n\n      this.source.connect(this.splitter);\n\n      for (let i = 0; i < 2; i++) {\n        this.splitter.connect(this.analyser[i], i, 0);\n        this.analyser[i].connect(this.merger, 0, i);\n      }\n\n      if (this.audible) {\n        this.merger.connect(ctx.destination);\n      }\n    }\n  }\n}\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { ModuloConfig } from '../interfaces/modulo-config.interface';\nimport { Gondolo } from \"../utils/modulo\";\n\n@Component({\n  selector: \"vg-modulo\",\n  templateUrl: \"./vg-modulo.component.html\",\n})\nexport class VgModuloComponent {\n  private _audioAnalyser: Gondolo;\n  private _ctx: CanvasRenderingContext2D;\n\n  @Input() moduloConfig: ModuloConfig;\n  @Input() audioElement: HTMLAudioElement;\n\n  @ViewChild(\"waveCanvas\", { static: false }) waveCanvas: ElementRef<HTMLCanvasElement>;\n\n  public startVisualizer() {\n    if (!this._audioAnalyser) {\n      this._audioAnalyser = new Gondolo(this.audioElement);\n\n      const {width, height} = this.moduloConfig.dimensions;\n      const canvasElement = this.waveCanvas.nativeElement;\n\n      this._ctx = canvasElement.getContext(\"2d\");\n\n      canvasElement.width = width;\n      canvasElement.height = height;\n    }\n\n    this.update();\n  }\n\n  public update() {\n    const audioFreq = this._audioAnalyser.waveform();\n    const {fillStyle, strokeStyle, lineWidth, scaleFactor} = this.moduloConfig;\n    const {width, height} = this.waveCanvas.nativeElement;\n\n    // Clear canvas\n    this._ctx.fillStyle = fillStyle;\n    this._ctx.fillRect(0, 0, width, height);\n\n    this._ctx.strokeStyle = strokeStyle;\n    this._ctx.lineWidth = lineWidth;\n\n    // Draw frequency lines\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, height / 2 - audioFreq[0] * scaleFactor);\n\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(\n        (width / audioFreq.length) * i,\n        height / 2 - audioFreq[i] * scaleFactor\n      );\n    }\n\n    this._ctx.moveTo(0, height / 2 + audioFreq[0] * scaleFactor);\n\n    for (let i = 0; i < audioFreq.length; i++) {\n      this._ctx.lineTo(\n        (width / audioFreq.length) * i,\n        height / 2 + audioFreq[i] * scaleFactor\n      );\n    }\n\n    this._ctx.stroke();\n\n    window.requestAnimationFrame(() => this.update());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { VgModuloComponent } from \"./components/vg-modulo.component\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [VgModuloComponent],\n  exports: [VgModuloComponent],\n})\nexport class VgModuloModule {}\n","export interface FluctusInterface {\n  ctx: AudioContext;\n  analyser: AnalyserNode | AnalyserNode[];\n  stereo: boolean;\n  audible: boolean;\n  wavedata: Uint8Array | null;\n  freqdata: any;\n  splitter: ChannelSplitterNode | null;\n  merger: ChannelMergerNode | null;\n  source: MediaElementAudioSourceNode | MediaStreamAudioSourceNode;\n  output: ChannelMergerNode;\n  waveform(output?: Uint8Array, channel?: number): Uint8Array;\n  frequencies(output?: Uint8Array, channel?: number): Uint8Array;\n}\n","export interface ModuloConfig {\n  dimensions: {\n    width: number,\n    height: number\n  },\n  fillStyle: string | CanvasGradient | CanvasPattern,\n  strokeStyle: string | CanvasGradient | CanvasPattern,\n  lineWidth: number,\n  scaleFactor: number\n}\n"],"names":[],"mappings":"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"}