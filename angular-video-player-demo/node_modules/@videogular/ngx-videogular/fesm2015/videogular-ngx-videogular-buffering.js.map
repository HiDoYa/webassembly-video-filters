{"version":3,"file":"videogular-ngx-videogular-buffering.js","sources":["../../libs/ngx-videogular/buffering/src/lib/vg-buffering/vg-buffering.component.ts","../buffering/src/lib/buffering.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IPlayable, VgApiService } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-buffering',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-buffering\">\n    <div class=\"bufferingContainer\">\n      <div class=\"loadingSpinner\"></div>\n    </div>\n  </div>`,\n  styles: [\n    `\n      vg-buffering {\n        display: none;\n        z-index: 201;\n      }\n      vg-buffering.is-buffering {\n        display: block;\n      }\n\n      .vg-buffering {\n        position: absolute;\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      .vg-buffering .bufferingContainer {\n        width: 100%;\n        position: absolute;\n        cursor: pointer;\n        top: 50%;\n        margin-top: -50px;\n        zoom: 1;\n        filter: alpha(opacity=60);\n        opacity: 0.6;\n      }\n      /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n      .vg-buffering .loadingSpinner {\n        background-color: rgba(0, 0, 0, 0);\n        border: 5px solid rgba(255, 255, 255, 1);\n        opacity: 0.9;\n        border-top: 5px solid rgba(0, 0, 0, 0);\n        border-left: 5px solid rgba(0, 0, 0, 0);\n        border-radius: 50px;\n        box-shadow: 0 0 35px #ffffff;\n        width: 50px;\n        height: 50px;\n        margin: 0 auto;\n        -moz-animation: spin 0.5s infinite linear;\n        -webkit-animation: spin 0.5s infinite linear;\n      }\n      .vg-buffering .loadingSpinner .stop {\n        -webkit-animation-play-state: paused;\n        -moz-animation-play-state: paused;\n      }\n      @-moz-keyframes spin {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(360deg);\n        }\n      }\n      @-moz-keyframes spinoff {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(-360deg);\n        }\n      }\n      @-webkit-keyframes spin {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n      @-webkit-keyframes spinoff {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(-360deg);\n        }\n      }\n    `,\n  ],\n})\nexport class VgBufferingComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: IPlayable;\n  checkInterval = 50;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(ref: ElementRef, public API: VgApiService) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe((isBuffering) =>\n        this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgBufferingComponent } from './vg-buffering/vg-buffering.component';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\n\n@NgModule({\n  imports: [CommonModule, VgCoreModule],\n  declarations: [VgBufferingComponent],\n  exports: [VgBufferingComponent],\n})\nexport class VgBufferingModule {}\n"],"names":[],"mappings":";;;;;;;;;MAsGa,oBAAoB;;;;;IAa/B,YAAY,GAAe,EAAS,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QARrD,kBAAa,GAAG,EAAE,CAAC;QACnB,mBAAc,GAAG,CAAC,CAAC;QACnB,gBAAW,GAAG,CAAC,CAAC;QAEhB,kBAAa,GAAmB,EAAE,CAAC;QAEA,gBAAW,GAAG,KAAK,CAAC;QAGrD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC;KAC/B;;;;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;YAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,SAAS;;;YAAC,MAAM,IAAI,CAAC,aAAa,EAAE,EAAC,CAChE,CAAC;SACH;KACF;;;;IAED,aAAa;QACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS;;;;QAAC,CAAC,WAAW,KAC7D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EACjC,CACF,CAAC;KACH;;;;;IAED,cAAc,CAAC,WAAW;QACxB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO;;;;QAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAC,CAAC;KACpD;;;YArIF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE;;;;SAIH;yBAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8EC;aAEJ;;;;YAnGC,UAAU;YAQQ,YAAY;;;oBA6F7B,KAAK;0BAUL,WAAW,SAAC,oBAAoB;;;;IAVjC,qCAAuB;;IAEvB,oCAAkB;;IAClB,sCAAkB;;IAClB,6CAAmB;;IACnB,8CAAmB;;IACnB,2CAAgB;;IAEhB,6CAAmC;;IAEnC,2CAAuD;;IAE1B,mCAAwB;;;;;;;;MCzG1C,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,oBAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;aAChC;;;;;;;;;;;;;;;;;"}